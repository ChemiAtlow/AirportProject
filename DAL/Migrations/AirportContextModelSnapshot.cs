// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    partial class AirportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirLine")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirLine = "El Al"
                        },
                        new
                        {
                            Id = 2,
                            AirLine = "Lufthansa"
                        },
                        new
                        {
                            Id = 3,
                            AirLine = "United"
                        },
                        new
                        {
                            Id = 4,
                            AirLine = "Frontier"
                        },
                        new
                        {
                            Id = 5,
                            AirLine = "Ryan air"
                        },
                        new
                        {
                            Id = 6,
                            AirLine = "Blue air"
                        },
                        new
                        {
                            Id = 7,
                            AirLine = "Air France"
                        },
                        new
                        {
                            Id = 8,
                            AirLine = "SWISS"
                        },
                        new
                        {
                            Id = 9,
                            AirLine = "Turkish Airlines"
                        });
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ControlTowers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("043ef48e-3ab0-43b5-8f55-cbd9e713abd0"),
                            Name = "TLV"
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AirplaneId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("From")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlannedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AirplaneId");

                    b.HasIndex("ControlTowerId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3a4003d8-7a7a-4ece-98f1-62e29c490414"),
                            AirplaneId = 1,
                            Direction = 0,
                            From = "JFK",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 18, 0, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("c50e024e-dd3e-40c0-bd17-771d1fdab967"),
                            AirplaneId = 2,
                            Direction = 0,
                            From = "IST",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 24, 57, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("3b827feb-70a0-4ca5-a61c-2949413c15bb"),
                            AirplaneId = 3,
                            Direction = 0,
                            From = "SAW",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 26, 18, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("b2db15cf-5276-4a6f-9cc3-649f87a24262"),
                            AirplaneId = 4,
                            ControlTowerId = new Guid("043ef48e-3ab0-43b5-8f55-cbd9e713abd0"),
                            Direction = 0,
                            From = "STN",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 31, 6, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("bcab278b-837c-4e0b-b323-60f67f4f76e7"),
                            AirplaneId = 1,
                            Direction = 1,
                            From = "TLV",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 17, 34, 0, DateTimeKind.Unspecified),
                            To = "ATH"
                        },
                        new
                        {
                            Id = new Guid("f0aaebd1-0040-453a-9c24-0916aad35c16"),
                            AirplaneId = 2,
                            Direction = 1,
                            From = "TLV",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 36, 29, 0, DateTimeKind.Unspecified),
                            To = "LTN"
                        });
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EnterStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LeaveStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("StationId");

                    b.ToTable("FlightHistories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52bdda88-d18e-4774-8739-ec17f67a54bb"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 30, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("3a4003d8-7a7a-4ece-98f1-62e29c490414"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("e026b844-55f6-4f09-b940-359f18a8d802")
                        },
                        new
                        {
                            Id = new Guid("6c54df5c-7f18-4c27-880b-67f9bdaf6d68"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("3a4003d8-7a7a-4ece-98f1-62e29c490414"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("16b5988a-74ab-4fb8-a40f-0438fbfb45e1")
                        },
                        new
                        {
                            Id = new Guid("14ade573-dbf1-4e9e-8868-16dfef39633b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("3a4003d8-7a7a-4ece-98f1-62e29c490414"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0ef08417-c913-4df1-b441-b0873b08533a")
                        },
                        new
                        {
                            Id = new Guid("15c58836-8a37-4ebc-9316-d3ad5dbe717b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("3a4003d8-7a7a-4ece-98f1-62e29c490414"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 27, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("eecc41cc-dfbf-45cc-8364-f9f9e627cccd")
                        },
                        new
                        {
                            Id = new Guid("7f041b82-5a99-4640-bba9-f42d4e0df6f3"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 48, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("c50e024e-dd3e-40c0-bd17-771d1fdab967"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("e026b844-55f6-4f09-b940-359f18a8d802")
                        },
                        new
                        {
                            Id = new Guid("7e1fce25-2dab-49d5-a77c-9798a132a628"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("c50e024e-dd3e-40c0-bd17-771d1fdab967"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("05553c5e-e7db-4119-b3aa-c541282ba671")
                        },
                        new
                        {
                            Id = new Guid("5fae48b1-4923-4eef-828a-9da2c6fccd5d"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("c50e024e-dd3e-40c0-bd17-771d1fdab967"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0ef08417-c913-4df1-b441-b0873b08533a")
                        },
                        new
                        {
                            Id = new Guid("b7d04efa-a489-4f7e-a32b-92e0bdaf2520"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("c50e024e-dd3e-40c0-bd17-771d1fdab967"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 38, 10, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("eecc41cc-dfbf-45cc-8364-f9f9e627cccd")
                        },
                        new
                        {
                            Id = new Guid("eccaa4cd-de5e-4184-8498-34befc44633b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("3b827feb-70a0-4ca5-a61c-2949413c15bb"),
                            StationId = new Guid("e026b844-55f6-4f09-b940-359f18a8d802")
                        },
                        new
                        {
                            Id = new Guid("90840f1b-811d-435a-93d2-b951730d2ae6"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 46, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("bcab278b-837c-4e0b-b323-60f67f4f76e7"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("08ceb74c-d1bb-4007-b70e-af8460680c9b")
                        },
                        new
                        {
                            Id = new Guid("a3297c67-addf-4cfd-9d43-c1dc9ec4c336"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("bcab278b-837c-4e0b-b323-60f67f4f76e7"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("eecc41cc-dfbf-45cc-8364-f9f9e627cccd")
                        },
                        new
                        {
                            Id = new Guid("e02ea807-e379-470d-8c29-f1b5ee9abd2f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("bcab278b-837c-4e0b-b323-60f67f4f76e7"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0c9f7aec-8d2d-47be-a52e-b023d6d7beb7")
                        },
                        new
                        {
                            Id = new Guid("eac8249f-7c99-4079-b0bd-8b42f93e07b4"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("bcab278b-837c-4e0b-b323-60f67f4f76e7"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("118b248a-047e-46b9-8c58-b7231ab71e53")
                        },
                        new
                        {
                            Id = new Guid("7750d765-ebc7-44f9-9a3f-1ac3585f244b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("bcab278b-837c-4e0b-b323-60f67f4f76e7"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 29, 3, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("ea56a6e8-3260-4a5e-a729-c15159de3cb2")
                        },
                        new
                        {
                            Id = new Guid("639aaa7f-06a1-46c1-9ffa-7088a7a82adf"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 38, 16, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("f0aaebd1-0040-453a-9c24-0916aad35c16"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("08ceb74c-d1bb-4007-b70e-af8460680c9b")
                        },
                        new
                        {
                            Id = new Guid("452c76b8-586b-4e7e-8b28-09dd63823010"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("f0aaebd1-0040-453a-9c24-0916aad35c16"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("eecc41cc-dfbf-45cc-8364-f9f9e627cccd")
                        },
                        new
                        {
                            Id = new Guid("570bfb0f-12ee-4426-8ffa-ad99162e6122"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("f0aaebd1-0040-453a-9c24-0916aad35c16"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0c9f7aec-8d2d-47be-a52e-b023d6d7beb7")
                        },
                        new
                        {
                            Id = new Guid("66854bb5-5238-4a42-84bf-4470a4bdd501"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("f0aaebd1-0040-453a-9c24-0916aad35c16"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("5f7c5c2e-d58d-4ac1-b1e5-b327e83143ec")
                        },
                        new
                        {
                            Id = new Guid("733b66a3-08b7-4cd9-bd79-982a6e959c0f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("f0aaebd1-0040-453a-9c24-0916aad35c16"),
                            StationId = new Guid("ea56a6e8-3260-4a5e-a729-c15159de3cb2")
                        });
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CurrentFlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrentFlightId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e026b844-55f6-4f09-b940-359f18a8d802"),
                            CurrentFlightId = new Guid("3b827feb-70a0-4ca5-a61c-2949413c15bb"),
                            Name = "Land port 1"
                        },
                        new
                        {
                            Id = new Guid("05553c5e-e7db-4119-b3aa-c541282ba671"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("16b5988a-74ab-4fb8-a40f-0438fbfb45e1"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("0ef08417-c913-4df1-b441-b0873b08533a"),
                            Name = "Drop lugage"
                        },
                        new
                        {
                            Id = new Guid("eecc41cc-dfbf-45cc-8364-f9f9e627cccd"),
                            Name = "Refuel"
                        },
                        new
                        {
                            Id = new Guid("08ceb74c-d1bb-4007-b70e-af8460680c9b"),
                            Name = "Takeoff port 1"
                        },
                        new
                        {
                            Id = new Guid("0c9f7aec-8d2d-47be-a52e-b023d6d7beb7"),
                            Name = "Pick lugage"
                        },
                        new
                        {
                            Id = new Guid("118b248a-047e-46b9-8c58-b7231ab71e53"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("5f7c5c2e-d58d-4ac1-b1e5-b327e83143ec"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("ea56a6e8-3260-4a5e-a729-c15159de3cb2"),
                            CurrentFlightId = new Guid("f0aaebd1-0040-453a-9c24-0916aad35c16"),
                            Name = "Takeoff"
                        });
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.HasKey("StationToId", "Direction", "ControlTowerId");

                    b.HasIndex("ControlTowerId");

                    b.HasIndex("StationToId")
                        .IsUnique();

                    b.ToTable("StationControlTowerRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("e026b844-55f6-4f09-b940-359f18a8d802"),
                            Direction = 0,
                            ControlTowerId = new Guid("043ef48e-3ab0-43b5-8f55-cbd9e713abd0")
                        },
                        new
                        {
                            StationToId = new Guid("08ceb74c-d1bb-4007-b70e-af8460680c9b"),
                            Direction = 1,
                            ControlTowerId = new Guid("043ef48e-3ab0-43b5-8f55-cbd9e713abd0")
                        });
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationFromId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.HasKey("StationToId", "StationFromId", "Direction");

                    b.HasIndex("StationFromId");

                    b.ToTable("StationRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("05553c5e-e7db-4119-b3aa-c541282ba671"),
                            StationFromId = new Guid("e026b844-55f6-4f09-b940-359f18a8d802"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("16b5988a-74ab-4fb8-a40f-0438fbfb45e1"),
                            StationFromId = new Guid("e026b844-55f6-4f09-b940-359f18a8d802"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("0ef08417-c913-4df1-b441-b0873b08533a"),
                            StationFromId = new Guid("05553c5e-e7db-4119-b3aa-c541282ba671"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("0ef08417-c913-4df1-b441-b0873b08533a"),
                            StationFromId = new Guid("16b5988a-74ab-4fb8-a40f-0438fbfb45e1"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("eecc41cc-dfbf-45cc-8364-f9f9e627cccd"),
                            StationFromId = new Guid("0ef08417-c913-4df1-b441-b0873b08533a"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("0c9f7aec-8d2d-47be-a52e-b023d6d7beb7"),
                            StationFromId = new Guid("eecc41cc-dfbf-45cc-8364-f9f9e627cccd"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("eecc41cc-dfbf-45cc-8364-f9f9e627cccd"),
                            StationFromId = new Guid("08ceb74c-d1bb-4007-b70e-af8460680c9b"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("118b248a-047e-46b9-8c58-b7231ab71e53"),
                            StationFromId = new Guid("0c9f7aec-8d2d-47be-a52e-b023d6d7beb7"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("5f7c5c2e-d58d-4ac1-b1e5-b327e83143ec"),
                            StationFromId = new Guid("0c9f7aec-8d2d-47be-a52e-b023d6d7beb7"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("ea56a6e8-3260-4a5e-a729-c15159de3cb2"),
                            StationFromId = new Guid("118b248a-047e-46b9-8c58-b7231ab71e53"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("ea56a6e8-3260-4a5e-a729-c15159de3cb2"),
                            StationFromId = new Guid("5f7c5c2e-d58d-4ac1-b1e5-b327e83143ec"),
                            Direction = 1
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.HasOne("Common.Models.Airplane", "Airplane")
                        .WithMany("Flights")
                        .HasForeignKey("AirplaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FlightsWaiting")
                        .HasForeignKey("ControlTowerId");

                    b.Navigation("Airplane");

                    b.Navigation("ControlTower");
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.HasOne("Common.Models.Flight", "Flight")
                        .WithMany("History")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithMany("History")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.HasOne("Common.Models.Flight", "CurrentFlight")
                        .WithMany()
                        .HasForeignKey("CurrentFlightId");

                    b.Navigation("CurrentFlight");
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FirstStations")
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithOne("ControlTowerRelation")
                        .HasForeignKey("Common.Models.StationControlTowerRelation", "StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlTower");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.HasOne("Common.Models.Station", "StationFrom")
                        .WithMany("ChildrenStations")
                        .HasForeignKey("StationFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "StationTo")
                        .WithMany("ParentStations")
                        .HasForeignKey("StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StationFrom");

                    b.Navigation("StationTo");
                });

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Navigation("FirstStations");

                    b.Navigation("FlightsWaiting");
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Navigation("ChildrenStations");

                    b.Navigation("ControlTowerRelation");

                    b.Navigation("History");

                    b.Navigation("ParentStations");
                });
#pragma warning restore 612, 618
        }
    }
}
