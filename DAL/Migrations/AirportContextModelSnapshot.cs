// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    partial class AirportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirLine")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirLine = "El Al"
                        },
                        new
                        {
                            Id = 2,
                            AirLine = "Lufthansa"
                        },
                        new
                        {
                            Id = 3,
                            AirLine = "United"
                        },
                        new
                        {
                            Id = 4,
                            AirLine = "Frontier"
                        },
                        new
                        {
                            Id = 5,
                            AirLine = "Ryan air"
                        },
                        new
                        {
                            Id = 6,
                            AirLine = "Blue air"
                        },
                        new
                        {
                            Id = 7,
                            AirLine = "Air France"
                        },
                        new
                        {
                            Id = 8,
                            AirLine = "SWISS"
                        },
                        new
                        {
                            Id = 9,
                            AirLine = "Turkish Airlines"
                        });
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ControlTowers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            Name = "TLV"
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AirplaneId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("From")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlannedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AirplaneId");

                    b.HasIndex("ControlTowerId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("264ec1e4-c40c-4c79-8b51-f43e3603ea8b"),
                            AirplaneId = 1,
                            Direction = 0,
                            From = "JFK",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 18, 0, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("218e1ceb-a5c6-44e2-b3ee-88a60e9dba7a"),
                            AirplaneId = 2,
                            Direction = 0,
                            From = "IST",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 24, 57, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("5dd553ac-1ca7-4f74-8a59-9fdf04b6bf2e"),
                            AirplaneId = 3,
                            Direction = 0,
                            From = "SAW",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 26, 18, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("1a5b9b8e-3053-4a82-ae63-50fb0baeb85b"),
                            AirplaneId = 4,
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            Direction = 0,
                            From = "STN",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 31, 6, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("26a63d59-27b8-4df0-951e-1a3ae39c48e6"),
                            AirplaneId = 1,
                            Direction = 1,
                            From = "TLV",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 17, 34, 0, DateTimeKind.Unspecified),
                            To = "ATH"
                        },
                        new
                        {
                            Id = new Guid("dc2a58c6-4fb9-4d26-aaf8-de9fbfa49c4a"),
                            AirplaneId = 2,
                            Direction = 1,
                            From = "TLV",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 36, 29, 0, DateTimeKind.Unspecified),
                            To = "LTN"
                        });
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EnterStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LeaveStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("StationId");

                    b.ToTable("FlightHistories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8bd2749-69a9-4a65-943f-acfd67d937b8"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 30, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("264ec1e4-c40c-4c79-8b51-f43e3603ea8b"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("ee29fafb-95f0-4485-9f66-1b23755de247")
                        },
                        new
                        {
                            Id = new Guid("26116e7e-ba5f-439e-8f2d-115dc2b30ff3"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("264ec1e4-c40c-4c79-8b51-f43e3603ea8b"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("eb0974ab-2d72-4125-aeb6-0e87212f4562")
                        },
                        new
                        {
                            Id = new Guid("7531b5f1-35ec-43c1-96e2-46a9aa7e1863"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("264ec1e4-c40c-4c79-8b51-f43e3603ea8b"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("e38dee1b-c356-4544-9fd0-6c63a13e9599")
                        },
                        new
                        {
                            Id = new Guid("9163a421-f7fc-4294-8526-8fed851e18b9"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("264ec1e4-c40c-4c79-8b51-f43e3603ea8b"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 27, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("e4f03771-bb1f-4d8e-a891-be2b11fa8345")
                        },
                        new
                        {
                            Id = new Guid("2c830436-bc47-4197-9550-ba80fcab62c1"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 48, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("218e1ceb-a5c6-44e2-b3ee-88a60e9dba7a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("ee29fafb-95f0-4485-9f66-1b23755de247")
                        },
                        new
                        {
                            Id = new Guid("a713e0c6-0e37-411c-bb1a-00b71807909f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("218e1ceb-a5c6-44e2-b3ee-88a60e9dba7a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("ef150cc4-b547-42f5-b127-2b56e0b58d35")
                        },
                        new
                        {
                            Id = new Guid("cc60d1d8-d419-4ceb-8de8-5ea3fd2d0bf3"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("218e1ceb-a5c6-44e2-b3ee-88a60e9dba7a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("e38dee1b-c356-4544-9fd0-6c63a13e9599")
                        },
                        new
                        {
                            Id = new Guid("9cf405a3-2795-40a8-b84b-e677a0ba1d3f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("218e1ceb-a5c6-44e2-b3ee-88a60e9dba7a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 38, 10, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("e4f03771-bb1f-4d8e-a891-be2b11fa8345")
                        },
                        new
                        {
                            Id = new Guid("af574395-b5dc-4d6a-9310-d30787f0b53b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("5dd553ac-1ca7-4f74-8a59-9fdf04b6bf2e"),
                            StationId = new Guid("ee29fafb-95f0-4485-9f66-1b23755de247")
                        },
                        new
                        {
                            Id = new Guid("d71b316f-d856-4fab-8c9f-cfdce2522e85"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 46, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("26a63d59-27b8-4df0-951e-1a3ae39c48e6"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("9b10881d-f4bc-4b66-acb4-b829a9e6a32f")
                        },
                        new
                        {
                            Id = new Guid("3e8013ed-512c-4c65-8ae5-bac57cc8d726"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("26a63d59-27b8-4df0-951e-1a3ae39c48e6"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("e4f03771-bb1f-4d8e-a891-be2b11fa8345")
                        },
                        new
                        {
                            Id = new Guid("a8c88a4d-b7b6-495c-a617-ef37b7abd125"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("26a63d59-27b8-4df0-951e-1a3ae39c48e6"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("6a9a11f2-01a8-422e-8c7a-e50394564414")
                        },
                        new
                        {
                            Id = new Guid("ef4627e3-a921-4fcc-9e0e-7e442deaa202"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("26a63d59-27b8-4df0-951e-1a3ae39c48e6"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0c508047-01a1-44ef-8cec-be057b41ef41")
                        },
                        new
                        {
                            Id = new Guid("0ad27db7-eefa-49f2-9d85-fbee4236ada5"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("26a63d59-27b8-4df0-951e-1a3ae39c48e6"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 29, 3, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("3cc318d6-9761-49c8-a781-57e1e850c5f4")
                        },
                        new
                        {
                            Id = new Guid("91626d0d-7192-4237-9b35-57415f4a2e51"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 38, 16, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("dc2a58c6-4fb9-4d26-aaf8-de9fbfa49c4a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("9b10881d-f4bc-4b66-acb4-b829a9e6a32f")
                        },
                        new
                        {
                            Id = new Guid("7bde51c4-e604-47ea-915f-b0ebee89bb86"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("dc2a58c6-4fb9-4d26-aaf8-de9fbfa49c4a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("e4f03771-bb1f-4d8e-a891-be2b11fa8345")
                        },
                        new
                        {
                            Id = new Guid("2d390ced-43ee-447d-b7a9-ab43938691d6"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("dc2a58c6-4fb9-4d26-aaf8-de9fbfa49c4a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("6a9a11f2-01a8-422e-8c7a-e50394564414")
                        },
                        new
                        {
                            Id = new Guid("7cb2957d-5fb8-40f1-a348-8b094ecfc22c"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("dc2a58c6-4fb9-4d26-aaf8-de9fbfa49c4a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("f9404bbb-f2e8-457f-99ce-820df340af79")
                        },
                        new
                        {
                            Id = new Guid("3ac66e82-c322-4591-9901-d07ef92e43ad"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("dc2a58c6-4fb9-4d26-aaf8-de9fbfa49c4a"),
                            StationId = new Guid("3cc318d6-9761-49c8-a781-57e1e850c5f4")
                        });
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CurrentFlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ControlTowerId");

                    b.HasIndex("CurrentFlightId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee29fafb-95f0-4485-9f66-1b23755de247"),
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            CurrentFlightId = new Guid("5dd553ac-1ca7-4f74-8a59-9fdf04b6bf2e"),
                            Name = "Land port 1"
                        },
                        new
                        {
                            Id = new Guid("ef150cc4-b547-42f5-b127-2b56e0b58d35"),
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("eb0974ab-2d72-4125-aeb6-0e87212f4562"),
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("e38dee1b-c356-4544-9fd0-6c63a13e9599"),
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            Name = "Drop lugage"
                        },
                        new
                        {
                            Id = new Guid("e4f03771-bb1f-4d8e-a891-be2b11fa8345"),
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            Name = "Refuel"
                        },
                        new
                        {
                            Id = new Guid("9b10881d-f4bc-4b66-acb4-b829a9e6a32f"),
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            Name = "Takeoff port 1"
                        },
                        new
                        {
                            Id = new Guid("6a9a11f2-01a8-422e-8c7a-e50394564414"),
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            Name = "Pick lugage"
                        },
                        new
                        {
                            Id = new Guid("0c508047-01a1-44ef-8cec-be057b41ef41"),
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("f9404bbb-f2e8-457f-99ce-820df340af79"),
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("3cc318d6-9761-49c8-a781-57e1e850c5f4"),
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa"),
                            CurrentFlightId = new Guid("dc2a58c6-4fb9-4d26-aaf8-de9fbfa49c4a"),
                            Name = "Takeoff"
                        });
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.HasKey("StationToId", "Direction", "ControlTowerId");

                    b.HasIndex("ControlTowerId");

                    b.HasIndex("StationToId")
                        .IsUnique();

                    b.ToTable("StationControlTowerRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("ee29fafb-95f0-4485-9f66-1b23755de247"),
                            Direction = 0,
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa")
                        },
                        new
                        {
                            StationToId = new Guid("9b10881d-f4bc-4b66-acb4-b829a9e6a32f"),
                            Direction = 1,
                            ControlTowerId = new Guid("43e62229-a967-4ef6-be31-44e46f0649aa")
                        });
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationFromId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.HasKey("StationToId", "StationFromId", "Direction");

                    b.HasIndex("StationFromId");

                    b.ToTable("StationRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("ef150cc4-b547-42f5-b127-2b56e0b58d35"),
                            StationFromId = new Guid("ee29fafb-95f0-4485-9f66-1b23755de247"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("eb0974ab-2d72-4125-aeb6-0e87212f4562"),
                            StationFromId = new Guid("ee29fafb-95f0-4485-9f66-1b23755de247"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("e38dee1b-c356-4544-9fd0-6c63a13e9599"),
                            StationFromId = new Guid("ef150cc4-b547-42f5-b127-2b56e0b58d35"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("e38dee1b-c356-4544-9fd0-6c63a13e9599"),
                            StationFromId = new Guid("eb0974ab-2d72-4125-aeb6-0e87212f4562"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("e4f03771-bb1f-4d8e-a891-be2b11fa8345"),
                            StationFromId = new Guid("e38dee1b-c356-4544-9fd0-6c63a13e9599"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("6a9a11f2-01a8-422e-8c7a-e50394564414"),
                            StationFromId = new Guid("e4f03771-bb1f-4d8e-a891-be2b11fa8345"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("e4f03771-bb1f-4d8e-a891-be2b11fa8345"),
                            StationFromId = new Guid("9b10881d-f4bc-4b66-acb4-b829a9e6a32f"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("0c508047-01a1-44ef-8cec-be057b41ef41"),
                            StationFromId = new Guid("6a9a11f2-01a8-422e-8c7a-e50394564414"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("f9404bbb-f2e8-457f-99ce-820df340af79"),
                            StationFromId = new Guid("6a9a11f2-01a8-422e-8c7a-e50394564414"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("3cc318d6-9761-49c8-a781-57e1e850c5f4"),
                            StationFromId = new Guid("0c508047-01a1-44ef-8cec-be057b41ef41"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("3cc318d6-9761-49c8-a781-57e1e850c5f4"),
                            StationFromId = new Guid("f9404bbb-f2e8-457f-99ce-820df340af79"),
                            Direction = 1
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.HasOne("Common.Models.Airplane", "Airplane")
                        .WithMany("Flights")
                        .HasForeignKey("AirplaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FlightsWaiting")
                        .HasForeignKey("ControlTowerId");

                    b.Navigation("Airplane");

                    b.Navigation("ControlTower");
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.HasOne("Common.Models.Flight", "Flight")
                        .WithMany("History")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithMany("History")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("Stations")
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Flight", "CurrentFlight")
                        .WithMany()
                        .HasForeignKey("CurrentFlightId");

                    b.Navigation("ControlTower");

                    b.Navigation("CurrentFlight");
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FirstStations")
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithOne("ControlTowerRelation")
                        .HasForeignKey("Common.Models.StationControlTowerRelation", "StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlTower");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.HasOne("Common.Models.Station", "StationFrom")
                        .WithMany("ChildrenStations")
                        .HasForeignKey("StationFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "StationTo")
                        .WithMany("ParentStations")
                        .HasForeignKey("StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StationFrom");

                    b.Navigation("StationTo");
                });

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Navigation("FirstStations");

                    b.Navigation("FlightsWaiting");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Navigation("ChildrenStations");

                    b.Navigation("ControlTowerRelation");

                    b.Navigation("History");

                    b.Navigation("ParentStations");
                });
#pragma warning restore 612, 618
        }
    }
}
