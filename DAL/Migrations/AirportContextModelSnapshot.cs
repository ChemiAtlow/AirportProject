// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    partial class AirportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirLine")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirLine = "El Al"
                        },
                        new
                        {
                            Id = 2,
                            AirLine = "Lufthansa"
                        },
                        new
                        {
                            Id = 3,
                            AirLine = "United"
                        },
                        new
                        {
                            Id = 4,
                            AirLine = "Frontier"
                        },
                        new
                        {
                            Id = 5,
                            AirLine = "Ryan air"
                        },
                        new
                        {
                            Id = 6,
                            AirLine = "Blue air"
                        },
                        new
                        {
                            Id = 7,
                            AirLine = "Air France"
                        },
                        new
                        {
                            Id = 8,
                            AirLine = "SWISS"
                        },
                        new
                        {
                            Id = 9,
                            AirLine = "Turkish Airlines"
                        });
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ControlTowers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("712aac16-0f87-4d13-b41d-3de864d6eb32")
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AirplaneId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("From")
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AirplaneId");

                    b.HasIndex("ControlTowerId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d291947-3d69-4c2c-b28a-88dfd66828cd"),
                            AirplaneId = 1,
                            Direction = 0,
                            From = "JFK",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("99d984d2-90c9-4e21-8693-16c1f72c7817"),
                            AirplaneId = 2,
                            Direction = 0,
                            From = "IST",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("7f4de68f-c1ff-4293-85bf-1a5c0ea6e4d4"),
                            AirplaneId = 3,
                            Direction = 0,
                            From = "SAW",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("b620cdb9-9d78-42af-aa64-030c9c442bd5"),
                            AirplaneId = 4,
                            ControlTowerId = new Guid("712aac16-0f87-4d13-b41d-3de864d6eb32"),
                            Direction = 0,
                            From = "STN",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("d95adee0-48a1-4115-ac3d-0f3cb32c6bb1"),
                            AirplaneId = 1,
                            Direction = 1,
                            From = "TLV",
                            To = "ATH"
                        },
                        new
                        {
                            Id = new Guid("5bba3497-1fa5-4f55-94f4-a9c664bb0e4c"),
                            AirplaneId = 2,
                            Direction = 1,
                            From = "TLV",
                            To = "LTN"
                        });
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EnterStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LeaveStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("StationId");

                    b.ToTable("FlightHistories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e833fe0-4226-4dbe-95ed-9416bdbacc2e"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 30, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("2d291947-3d69-4c2c-b28a-88dfd66828cd"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("7e4628a0-c9cc-48ee-9a8a-ed7e47619852")
                        },
                        new
                        {
                            Id = new Guid("6be6f7c9-c86e-4923-bd90-30580b26b962"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("2d291947-3d69-4c2c-b28a-88dfd66828cd"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("c31d7156-7ae9-4834-8f2d-0d7888859d4b")
                        },
                        new
                        {
                            Id = new Guid("9dda3443-389e-48d7-8eea-5edd01322f71"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("2d291947-3d69-4c2c-b28a-88dfd66828cd"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("a69569cd-9604-41cb-b597-27f0f0b5446c")
                        },
                        new
                        {
                            Id = new Guid("226bbb90-5b6e-4b02-a4b0-f123e9d2a284"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("2d291947-3d69-4c2c-b28a-88dfd66828cd"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 27, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("c7f97163-9ef4-4aa7-8e41-f3e43d59ee7f")
                        },
                        new
                        {
                            Id = new Guid("24a5c0fd-7bc9-46e1-9a73-aa1a1033196b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 48, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("99d984d2-90c9-4e21-8693-16c1f72c7817"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("7e4628a0-c9cc-48ee-9a8a-ed7e47619852")
                        },
                        new
                        {
                            Id = new Guid("0e48114f-1b8c-49ab-aa50-ed801621ecda"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("99d984d2-90c9-4e21-8693-16c1f72c7817"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("c552cc3e-0eae-4809-9d85-1dea6d026639")
                        },
                        new
                        {
                            Id = new Guid("05e0984a-13da-40f1-a79b-7460a9d29623"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("99d984d2-90c9-4e21-8693-16c1f72c7817"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("a69569cd-9604-41cb-b597-27f0f0b5446c")
                        },
                        new
                        {
                            Id = new Guid("33763bfa-b38d-48e5-a163-23f3ef27ee87"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("99d984d2-90c9-4e21-8693-16c1f72c7817"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 38, 10, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("c7f97163-9ef4-4aa7-8e41-f3e43d59ee7f")
                        },
                        new
                        {
                            Id = new Guid("b90fbb7e-c339-4b8a-be52-193f76545ac9"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("7f4de68f-c1ff-4293-85bf-1a5c0ea6e4d4"),
                            StationId = new Guid("7e4628a0-c9cc-48ee-9a8a-ed7e47619852")
                        },
                        new
                        {
                            Id = new Guid("c34da3ab-7352-4ecd-aa2a-480170e4c240"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 46, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("d95adee0-48a1-4115-ac3d-0f3cb32c6bb1"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("b67283bc-6b2b-46e5-8d67-edc7ca3f9d62")
                        },
                        new
                        {
                            Id = new Guid("e5782d57-1ee6-42a4-8a28-910f14534955"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("d95adee0-48a1-4115-ac3d-0f3cb32c6bb1"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("c7f97163-9ef4-4aa7-8e41-f3e43d59ee7f")
                        },
                        new
                        {
                            Id = new Guid("77fd0e49-f5e8-4655-83b7-286c65e89bf0"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("d95adee0-48a1-4115-ac3d-0f3cb32c6bb1"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("dd322ed6-ab06-412f-b194-f91dd482e4f7")
                        },
                        new
                        {
                            Id = new Guid("e7a8d3b6-f09a-46b1-b35b-49a125fe83af"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("d95adee0-48a1-4115-ac3d-0f3cb32c6bb1"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("f1bae558-de55-44cf-bcb5-0ec2eee1a5ca")
                        },
                        new
                        {
                            Id = new Guid("bb867d0f-b5d2-4fc0-90b1-73c2a8a3d62f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("d95adee0-48a1-4115-ac3d-0f3cb32c6bb1"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 29, 3, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("fff7f93f-8ca1-47ad-927e-970ea2b509db")
                        },
                        new
                        {
                            Id = new Guid("ba3146b5-b9f4-45b5-9e8f-af4a3384e5e0"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 38, 16, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("5bba3497-1fa5-4f55-94f4-a9c664bb0e4c"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("b67283bc-6b2b-46e5-8d67-edc7ca3f9d62")
                        },
                        new
                        {
                            Id = new Guid("92006c7d-9331-4ddf-9203-a807e23e99f3"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("5bba3497-1fa5-4f55-94f4-a9c664bb0e4c"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("c7f97163-9ef4-4aa7-8e41-f3e43d59ee7f")
                        },
                        new
                        {
                            Id = new Guid("5a0029d2-af86-4ca9-b2d5-50dfbfb7432b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("5bba3497-1fa5-4f55-94f4-a9c664bb0e4c"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("dd322ed6-ab06-412f-b194-f91dd482e4f7")
                        },
                        new
                        {
                            Id = new Guid("d808007b-5820-4fd2-85c1-81bef1c3eac6"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("5bba3497-1fa5-4f55-94f4-a9c664bb0e4c"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("9794e328-4991-4200-b533-bc9edf259b4b")
                        },
                        new
                        {
                            Id = new Guid("aa3d187a-3e10-4695-ba70-1d5573395feb"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("5bba3497-1fa5-4f55-94f4-a9c664bb0e4c"),
                            StationId = new Guid("fff7f93f-8ca1-47ad-927e-970ea2b509db")
                        });
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CurrentFlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrentFlightId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e4628a0-c9cc-48ee-9a8a-ed7e47619852"),
                            CurrentFlightId = new Guid("7f4de68f-c1ff-4293-85bf-1a5c0ea6e4d4"),
                            Name = "Land port 1"
                        },
                        new
                        {
                            Id = new Guid("c552cc3e-0eae-4809-9d85-1dea6d026639"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("c31d7156-7ae9-4834-8f2d-0d7888859d4b"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("a69569cd-9604-41cb-b597-27f0f0b5446c"),
                            Name = "Drop lugage"
                        },
                        new
                        {
                            Id = new Guid("c7f97163-9ef4-4aa7-8e41-f3e43d59ee7f"),
                            Name = "Refuel"
                        },
                        new
                        {
                            Id = new Guid("b67283bc-6b2b-46e5-8d67-edc7ca3f9d62"),
                            Name = "Takeoff port 1"
                        },
                        new
                        {
                            Id = new Guid("dd322ed6-ab06-412f-b194-f91dd482e4f7"),
                            Name = "Pick lugage"
                        },
                        new
                        {
                            Id = new Guid("f1bae558-de55-44cf-bcb5-0ec2eee1a5ca"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("9794e328-4991-4200-b533-bc9edf259b4b"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("fff7f93f-8ca1-47ad-927e-970ea2b509db"),
                            CurrentFlightId = new Guid("5bba3497-1fa5-4f55-94f4-a9c664bb0e4c"),
                            Name = "Takeoff"
                        });
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.Property<Guid>("StationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.HasKey("StationId", "Direction", "ControlTowerId");

                    b.HasIndex("ControlTowerId");

                    b.HasIndex("StationId")
                        .IsUnique();

                    b.ToTable("StationControlTowerRelation");

                    b.HasData(
                        new
                        {
                            StationId = new Guid("7e4628a0-c9cc-48ee-9a8a-ed7e47619852"),
                            Direction = 0,
                            ControlTowerId = new Guid("712aac16-0f87-4d13-b41d-3de864d6eb32")
                        },
                        new
                        {
                            StationId = new Guid("b67283bc-6b2b-46e5-8d67-edc7ca3f9d62"),
                            Direction = 1,
                            ControlTowerId = new Guid("712aac16-0f87-4d13-b41d-3de864d6eb32")
                        });
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationFromId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.HasKey("StationToId", "StationFromId", "Direction");

                    b.HasIndex("StationFromId");

                    b.ToTable("StationRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("c552cc3e-0eae-4809-9d85-1dea6d026639"),
                            StationFromId = new Guid("7e4628a0-c9cc-48ee-9a8a-ed7e47619852"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("c31d7156-7ae9-4834-8f2d-0d7888859d4b"),
                            StationFromId = new Guid("7e4628a0-c9cc-48ee-9a8a-ed7e47619852"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("a69569cd-9604-41cb-b597-27f0f0b5446c"),
                            StationFromId = new Guid("c552cc3e-0eae-4809-9d85-1dea6d026639"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("a69569cd-9604-41cb-b597-27f0f0b5446c"),
                            StationFromId = new Guid("c31d7156-7ae9-4834-8f2d-0d7888859d4b"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("c7f97163-9ef4-4aa7-8e41-f3e43d59ee7f"),
                            StationFromId = new Guid("a69569cd-9604-41cb-b597-27f0f0b5446c"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("dd322ed6-ab06-412f-b194-f91dd482e4f7"),
                            StationFromId = new Guid("c7f97163-9ef4-4aa7-8e41-f3e43d59ee7f"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("c7f97163-9ef4-4aa7-8e41-f3e43d59ee7f"),
                            StationFromId = new Guid("b67283bc-6b2b-46e5-8d67-edc7ca3f9d62"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("f1bae558-de55-44cf-bcb5-0ec2eee1a5ca"),
                            StationFromId = new Guid("dd322ed6-ab06-412f-b194-f91dd482e4f7"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("9794e328-4991-4200-b533-bc9edf259b4b"),
                            StationFromId = new Guid("dd322ed6-ab06-412f-b194-f91dd482e4f7"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("fff7f93f-8ca1-47ad-927e-970ea2b509db"),
                            StationFromId = new Guid("f1bae558-de55-44cf-bcb5-0ec2eee1a5ca"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("fff7f93f-8ca1-47ad-927e-970ea2b509db"),
                            StationFromId = new Guid("9794e328-4991-4200-b533-bc9edf259b4b"),
                            Direction = 1
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.HasOne("Common.Models.Airplane", "Airplane")
                        .WithMany("Flights")
                        .HasForeignKey("AirplaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FlightsWaiting")
                        .HasForeignKey("ControlTowerId");

                    b.Navigation("Airplane");

                    b.Navigation("ControlTower");
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.HasOne("Common.Models.Flight", "Flight")
                        .WithMany("History")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithMany("History")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.HasOne("Common.Models.Flight", "CurrentFlight")
                        .WithMany()
                        .HasForeignKey("CurrentFlightId");

                    b.Navigation("CurrentFlight");
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FirstStations")
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithOne("ControlTowerRelation")
                        .HasForeignKey("Common.Models.StationControlTowerRelation", "StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlTower");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.HasOne("Common.Models.Station", "StationFrom")
                        .WithMany("ParentStations")
                        .HasForeignKey("StationFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "StationTo")
                        .WithMany("ChildrenStations")
                        .HasForeignKey("StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StationFrom");

                    b.Navigation("StationTo");
                });

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Navigation("FirstStations");

                    b.Navigation("FlightsWaiting");
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Navigation("ChildrenStations");

                    b.Navigation("ControlTowerRelation");

                    b.Navigation("History");

                    b.Navigation("ParentStations");
                });
#pragma warning restore 612, 618
        }
    }
}
