// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    partial class AirportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirLine")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirLine = "El Al"
                        },
                        new
                        {
                            Id = 2,
                            AirLine = "Lufthansa"
                        },
                        new
                        {
                            Id = 3,
                            AirLine = "United"
                        },
                        new
                        {
                            Id = 4,
                            AirLine = "Frontier"
                        },
                        new
                        {
                            Id = 5,
                            AirLine = "Ryan air"
                        },
                        new
                        {
                            Id = 6,
                            AirLine = "Blue air"
                        },
                        new
                        {
                            Id = 7,
                            AirLine = "Air France"
                        },
                        new
                        {
                            Id = 8,
                            AirLine = "SWISS"
                        },
                        new
                        {
                            Id = 9,
                            AirLine = "Turkish Airlines"
                        });
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ControlTowers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d33db14e-7ff8-4cfe-8b99-55e6f7b364a8"),
                            Name = "TLV"
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AirplaneId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("From")
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AirplaneId");

                    b.HasIndex("ControlTowerId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66d449df-d1d5-4f8f-b4dd-b9cdc1a773c6"),
                            AirplaneId = 1,
                            Direction = 0,
                            From = "JFK",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("50f7e8bf-7924-4a74-8c2b-5ffe1cec064e"),
                            AirplaneId = 2,
                            Direction = 0,
                            From = "IST",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("f35fe4e2-54b4-486c-9ba2-2261da5a8cd8"),
                            AirplaneId = 3,
                            Direction = 0,
                            From = "SAW",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("8bedf3e1-0646-44d3-a1e3-64d1f476f9b3"),
                            AirplaneId = 4,
                            ControlTowerId = new Guid("d33db14e-7ff8-4cfe-8b99-55e6f7b364a8"),
                            Direction = 0,
                            From = "STN",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("3880d9ae-ae40-4a38-a058-5442b012dd66"),
                            AirplaneId = 1,
                            Direction = 1,
                            From = "TLV",
                            To = "ATH"
                        },
                        new
                        {
                            Id = new Guid("1821509e-f07c-4fa3-b42e-266ff7209de7"),
                            AirplaneId = 2,
                            Direction = 1,
                            From = "TLV",
                            To = "LTN"
                        });
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EnterStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LeaveStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("StationId");

                    b.ToTable("FlightHistories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52d00766-f3c4-4385-af09-351b0c1c3e4f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 30, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("66d449df-d1d5-4f8f-b4dd-b9cdc1a773c6"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0f8aa583-c35d-452f-a275-4ed792b7f645")
                        },
                        new
                        {
                            Id = new Guid("d6b4c84b-185b-4f73-9965-47a95e2d5034"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("66d449df-d1d5-4f8f-b4dd-b9cdc1a773c6"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("892da281-1edd-4254-980f-b7b7bbe0b53e")
                        },
                        new
                        {
                            Id = new Guid("cbf8a0f6-cb97-4585-9353-46aa01594c3c"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("66d449df-d1d5-4f8f-b4dd-b9cdc1a773c6"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("6924b392-9367-4ff5-b86c-914da3e48998")
                        },
                        new
                        {
                            Id = new Guid("ac35331f-6af1-4b8d-bd33-21936a1029bc"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("66d449df-d1d5-4f8f-b4dd-b9cdc1a773c6"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 27, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("ee45404b-c63d-425e-9133-58e730c2010d")
                        },
                        new
                        {
                            Id = new Guid("ec920831-1c94-4f1f-b151-e92918494f96"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 48, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("50f7e8bf-7924-4a74-8c2b-5ffe1cec064e"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0f8aa583-c35d-452f-a275-4ed792b7f645")
                        },
                        new
                        {
                            Id = new Guid("3cd38f60-a910-4de7-998e-256a82b0020c"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("50f7e8bf-7924-4a74-8c2b-5ffe1cec064e"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("f9290460-fdae-4919-976e-bfaf5b9c8656")
                        },
                        new
                        {
                            Id = new Guid("6561af5e-77b0-427c-8c6c-eacd316544d5"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("50f7e8bf-7924-4a74-8c2b-5ffe1cec064e"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("6924b392-9367-4ff5-b86c-914da3e48998")
                        },
                        new
                        {
                            Id = new Guid("e571993e-0473-4cca-b332-a52348e72a5f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("50f7e8bf-7924-4a74-8c2b-5ffe1cec064e"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 38, 10, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("ee45404b-c63d-425e-9133-58e730c2010d")
                        },
                        new
                        {
                            Id = new Guid("8a7d546d-5105-4e83-8262-82c5cc51f145"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("f35fe4e2-54b4-486c-9ba2-2261da5a8cd8"),
                            StationId = new Guid("0f8aa583-c35d-452f-a275-4ed792b7f645")
                        },
                        new
                        {
                            Id = new Guid("02704e6b-a435-4f38-ba62-034a7d649984"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 46, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("3880d9ae-ae40-4a38-a058-5442b012dd66"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("db562c5d-8701-46ce-8817-a90fadfe991f")
                        },
                        new
                        {
                            Id = new Guid("30cdf3f4-fbfe-4ed3-afaa-23f90fd681f1"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("3880d9ae-ae40-4a38-a058-5442b012dd66"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("ee45404b-c63d-425e-9133-58e730c2010d")
                        },
                        new
                        {
                            Id = new Guid("b880d4b6-40e1-475b-b827-04d776860b17"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("3880d9ae-ae40-4a38-a058-5442b012dd66"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("ea208cf0-9042-4e92-b11e-c7174d6db48e")
                        },
                        new
                        {
                            Id = new Guid("48121608-384d-4429-8a4a-79af664980d3"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("3880d9ae-ae40-4a38-a058-5442b012dd66"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("c3485e28-656d-4aad-84d8-aa16a867c80f")
                        },
                        new
                        {
                            Id = new Guid("1157aa0e-a4db-4c1d-912a-2e569d4aff26"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("3880d9ae-ae40-4a38-a058-5442b012dd66"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 29, 3, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("da3d4fa3-c710-42fc-b613-a78b465b3307")
                        },
                        new
                        {
                            Id = new Guid("6c59cbdd-ac80-4e7a-9da5-6a120f959fce"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 38, 16, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("1821509e-f07c-4fa3-b42e-266ff7209de7"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("db562c5d-8701-46ce-8817-a90fadfe991f")
                        },
                        new
                        {
                            Id = new Guid("57089fa1-d7ba-4b94-8313-f5fa53412764"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("1821509e-f07c-4fa3-b42e-266ff7209de7"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("ee45404b-c63d-425e-9133-58e730c2010d")
                        },
                        new
                        {
                            Id = new Guid("715533c2-d90c-4f47-94f9-95c5494afd65"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("1821509e-f07c-4fa3-b42e-266ff7209de7"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("ea208cf0-9042-4e92-b11e-c7174d6db48e")
                        },
                        new
                        {
                            Id = new Guid("3158d2f0-42af-467d-a9ed-c0c445c45b8f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("1821509e-f07c-4fa3-b42e-266ff7209de7"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("74873abc-bb33-444f-bb3a-a91ff4d49b49")
                        },
                        new
                        {
                            Id = new Guid("60e01193-065b-4651-8e00-1fb2bdb97f7e"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("1821509e-f07c-4fa3-b42e-266ff7209de7"),
                            StationId = new Guid("da3d4fa3-c710-42fc-b613-a78b465b3307")
                        });
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CurrentFlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrentFlightId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f8aa583-c35d-452f-a275-4ed792b7f645"),
                            CurrentFlightId = new Guid("f35fe4e2-54b4-486c-9ba2-2261da5a8cd8"),
                            Name = "Land port 1"
                        },
                        new
                        {
                            Id = new Guid("f9290460-fdae-4919-976e-bfaf5b9c8656"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("892da281-1edd-4254-980f-b7b7bbe0b53e"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("6924b392-9367-4ff5-b86c-914da3e48998"),
                            Name = "Drop lugage"
                        },
                        new
                        {
                            Id = new Guid("ee45404b-c63d-425e-9133-58e730c2010d"),
                            Name = "Refuel"
                        },
                        new
                        {
                            Id = new Guid("db562c5d-8701-46ce-8817-a90fadfe991f"),
                            Name = "Takeoff port 1"
                        },
                        new
                        {
                            Id = new Guid("ea208cf0-9042-4e92-b11e-c7174d6db48e"),
                            Name = "Pick lugage"
                        },
                        new
                        {
                            Id = new Guid("c3485e28-656d-4aad-84d8-aa16a867c80f"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("74873abc-bb33-444f-bb3a-a91ff4d49b49"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("da3d4fa3-c710-42fc-b613-a78b465b3307"),
                            CurrentFlightId = new Guid("1821509e-f07c-4fa3-b42e-266ff7209de7"),
                            Name = "Takeoff"
                        });
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.HasKey("StationToId", "Direction", "ControlTowerId");

                    b.HasIndex("ControlTowerId");

                    b.HasIndex("StationToId")
                        .IsUnique();

                    b.ToTable("StationControlTowerRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("0f8aa583-c35d-452f-a275-4ed792b7f645"),
                            Direction = 0,
                            ControlTowerId = new Guid("d33db14e-7ff8-4cfe-8b99-55e6f7b364a8")
                        },
                        new
                        {
                            StationToId = new Guid("db562c5d-8701-46ce-8817-a90fadfe991f"),
                            Direction = 1,
                            ControlTowerId = new Guid("d33db14e-7ff8-4cfe-8b99-55e6f7b364a8")
                        });
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationFromId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.HasKey("StationToId", "StationFromId", "Direction");

                    b.HasIndex("StationFromId");

                    b.ToTable("StationRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("f9290460-fdae-4919-976e-bfaf5b9c8656"),
                            StationFromId = new Guid("0f8aa583-c35d-452f-a275-4ed792b7f645"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("892da281-1edd-4254-980f-b7b7bbe0b53e"),
                            StationFromId = new Guid("0f8aa583-c35d-452f-a275-4ed792b7f645"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("6924b392-9367-4ff5-b86c-914da3e48998"),
                            StationFromId = new Guid("f9290460-fdae-4919-976e-bfaf5b9c8656"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("6924b392-9367-4ff5-b86c-914da3e48998"),
                            StationFromId = new Guid("892da281-1edd-4254-980f-b7b7bbe0b53e"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("ee45404b-c63d-425e-9133-58e730c2010d"),
                            StationFromId = new Guid("6924b392-9367-4ff5-b86c-914da3e48998"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("ea208cf0-9042-4e92-b11e-c7174d6db48e"),
                            StationFromId = new Guid("ee45404b-c63d-425e-9133-58e730c2010d"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("ee45404b-c63d-425e-9133-58e730c2010d"),
                            StationFromId = new Guid("db562c5d-8701-46ce-8817-a90fadfe991f"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("c3485e28-656d-4aad-84d8-aa16a867c80f"),
                            StationFromId = new Guid("ea208cf0-9042-4e92-b11e-c7174d6db48e"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("74873abc-bb33-444f-bb3a-a91ff4d49b49"),
                            StationFromId = new Guid("ea208cf0-9042-4e92-b11e-c7174d6db48e"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("da3d4fa3-c710-42fc-b613-a78b465b3307"),
                            StationFromId = new Guid("c3485e28-656d-4aad-84d8-aa16a867c80f"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("da3d4fa3-c710-42fc-b613-a78b465b3307"),
                            StationFromId = new Guid("74873abc-bb33-444f-bb3a-a91ff4d49b49"),
                            Direction = 1
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.HasOne("Common.Models.Airplane", "Airplane")
                        .WithMany("Flights")
                        .HasForeignKey("AirplaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FlightsWaiting")
                        .HasForeignKey("ControlTowerId");

                    b.Navigation("Airplane");

                    b.Navigation("ControlTower");
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.HasOne("Common.Models.Flight", "Flight")
                        .WithMany("History")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithMany("History")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.HasOne("Common.Models.Flight", "CurrentFlight")
                        .WithMany()
                        .HasForeignKey("CurrentFlightId");

                    b.Navigation("CurrentFlight");
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FirstStations")
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithOne("ControlTowerRelation")
                        .HasForeignKey("Common.Models.StationControlTowerRelation", "StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlTower");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.HasOne("Common.Models.Station", "StationFrom")
                        .WithMany("ChildrenStations")
                        .HasForeignKey("StationFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "StationTo")
                        .WithMany("ParentStations")
                        .HasForeignKey("StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StationFrom");

                    b.Navigation("StationTo");
                });

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Navigation("FirstStations");

                    b.Navigation("FlightsWaiting");
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Navigation("ChildrenStations");

                    b.Navigation("ControlTowerRelation");

                    b.Navigation("History");

                    b.Navigation("ParentStations");
                });
#pragma warning restore 612, 618
        }
    }
}
