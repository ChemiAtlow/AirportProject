// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    partial class AirportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirLine")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirLine = "El Al"
                        },
                        new
                        {
                            Id = 2,
                            AirLine = "Lufthansa"
                        },
                        new
                        {
                            Id = 3,
                            AirLine = "United"
                        },
                        new
                        {
                            Id = 4,
                            AirLine = "Frontier"
                        },
                        new
                        {
                            Id = 5,
                            AirLine = "Ryan air"
                        },
                        new
                        {
                            Id = 6,
                            AirLine = "Blue air"
                        },
                        new
                        {
                            Id = 7,
                            AirLine = "Air France"
                        },
                        new
                        {
                            Id = 8,
                            AirLine = "SWISS"
                        },
                        new
                        {
                            Id = 9,
                            AirLine = "Turkish Airlines"
                        });
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ControlTowers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Name = "TLV"
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AirplaneId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("From")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlannedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("StationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AirplaneId");

                    b.HasIndex("ControlTowerId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9cf66913-b2f1-4c7f-91f3-053d2efbf9c1"),
                            AirplaneId = 1,
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Direction = 0,
                            From = "JFK",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 18, 0, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("7f7381f0-cd65-410c-9952-05e38779bfa3"),
                            AirplaneId = 2,
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Direction = 0,
                            From = "IST",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 24, 57, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("ca2b41fc-d7d1-4305-9e35-a435204023f0"),
                            AirplaneId = 3,
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Direction = 0,
                            From = "SAW",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 26, 18, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("1164532a-8f88-4be1-ac00-c6a3c5978641"),
                            AirplaneId = 4,
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Direction = 0,
                            From = "STN",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 31, 6, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("28297ed7-db3f-42d6-8705-c2f994b0d7fc"),
                            AirplaneId = 1,
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Direction = 1,
                            From = "TLV",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 17, 34, 0, DateTimeKind.Unspecified),
                            To = "ATH"
                        },
                        new
                        {
                            Id = new Guid("72749932-2ab1-4f2a-908c-14fc98d52782"),
                            AirplaneId = 2,
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Direction = 1,
                            From = "TLV",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 36, 29, 0, DateTimeKind.Unspecified),
                            To = "LTN"
                        });
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EnterStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LeaveStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("StationId");

                    b.ToTable("FlightHistories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1728005f-07a2-4d4c-bc22-dc28a1d94b7b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 30, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("9cf66913-b2f1-4c7f-91f3-053d2efbf9c1"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0de4ae99-0130-49c1-a0da-6ffe53670b6a")
                        },
                        new
                        {
                            Id = new Guid("defe4cd0-9d5b-4252-808d-c6422b897c1f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("9cf66913-b2f1-4c7f-91f3-053d2efbf9c1"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("fe89c47f-add6-432f-92b2-7d97db0a9baf")
                        },
                        new
                        {
                            Id = new Guid("7ee506a7-0544-4ffe-9b8a-fcfc23ad9cdb"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("9cf66913-b2f1-4c7f-91f3-053d2efbf9c1"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("007de4a2-165c-44d4-857a-009918751144")
                        },
                        new
                        {
                            Id = new Guid("91671abe-9d3e-40f7-b0b6-49fa93d874d9"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("9cf66913-b2f1-4c7f-91f3-053d2efbf9c1"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 27, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("05451801-c66c-4646-8091-b954e49ed776")
                        },
                        new
                        {
                            Id = new Guid("db82ddb8-b306-4563-8441-506e06cb4bda"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 48, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("7f7381f0-cd65-410c-9952-05e38779bfa3"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0de4ae99-0130-49c1-a0da-6ffe53670b6a")
                        },
                        new
                        {
                            Id = new Guid("c847b9e3-777a-4b45-b437-f79858bfb4b7"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("7f7381f0-cd65-410c-9952-05e38779bfa3"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("7628362e-57a1-43ed-88f8-55d2f81f280c")
                        },
                        new
                        {
                            Id = new Guid("c0c2e588-d15d-4412-a296-0ca3c0efe67c"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("7f7381f0-cd65-410c-9952-05e38779bfa3"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("007de4a2-165c-44d4-857a-009918751144")
                        },
                        new
                        {
                            Id = new Guid("609c255c-5a93-471d-84b7-3f9a9852d09b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("7f7381f0-cd65-410c-9952-05e38779bfa3"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 38, 10, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("05451801-c66c-4646-8091-b954e49ed776")
                        },
                        new
                        {
                            Id = new Guid("05fd8115-29bb-4a90-a9c6-316e7181c370"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("ca2b41fc-d7d1-4305-9e35-a435204023f0"),
                            StationId = new Guid("0de4ae99-0130-49c1-a0da-6ffe53670b6a")
                        },
                        new
                        {
                            Id = new Guid("5d957e59-3015-427b-8729-450b8e255204"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 46, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("28297ed7-db3f-42d6-8705-c2f994b0d7fc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("a128508a-9ef4-4cf4-b4b9-6cfd5c64838d")
                        },
                        new
                        {
                            Id = new Guid("4e8e6874-d87c-4524-bc55-673ccd264100"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("28297ed7-db3f-42d6-8705-c2f994b0d7fc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("05451801-c66c-4646-8091-b954e49ed776")
                        },
                        new
                        {
                            Id = new Guid("92050d6f-d33c-4001-801c-48225c613dd7"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("28297ed7-db3f-42d6-8705-c2f994b0d7fc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("1241505e-4432-4724-b393-f600d3e3b80b")
                        },
                        new
                        {
                            Id = new Guid("196f67ae-026d-4127-b54f-2413e1faddc5"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("28297ed7-db3f-42d6-8705-c2f994b0d7fc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("bb56545f-0f88-4fc9-97f7-3d639827f280")
                        },
                        new
                        {
                            Id = new Guid("26af5728-d6fe-4660-b1ae-a4e036e83c14"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("28297ed7-db3f-42d6-8705-c2f994b0d7fc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 29, 3, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("7188f8ee-9ee8-4d33-a50e-4fcd097faa4e")
                        },
                        new
                        {
                            Id = new Guid("08765da2-ceb2-435a-ab84-e7b78d6e4aaa"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 38, 16, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("72749932-2ab1-4f2a-908c-14fc98d52782"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("a128508a-9ef4-4cf4-b4b9-6cfd5c64838d")
                        },
                        new
                        {
                            Id = new Guid("2c1bd411-b916-4411-95da-f0a6e09894c3"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("72749932-2ab1-4f2a-908c-14fc98d52782"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("05451801-c66c-4646-8091-b954e49ed776")
                        },
                        new
                        {
                            Id = new Guid("f83b88fb-6adb-447b-9b64-ce01bc4a4e59"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("72749932-2ab1-4f2a-908c-14fc98d52782"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("1241505e-4432-4724-b393-f600d3e3b80b")
                        },
                        new
                        {
                            Id = new Guid("ebb8a08e-bfab-46e0-bcd1-5b9348d56711"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("72749932-2ab1-4f2a-908c-14fc98d52782"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("beb03d6e-1f9f-46e6-94cc-da6c1e46469e")
                        },
                        new
                        {
                            Id = new Guid("84417ef8-9f4b-4ae7-a245-6bc51a315be5"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("72749932-2ab1-4f2a-908c-14fc98d52782"),
                            StationId = new Guid("7188f8ee-9ee8-4d33-a50e-4fcd097faa4e")
                        });
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CurrentFlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ControlTowerId");

                    b.HasIndex("CurrentFlightId")
                        .IsUnique();

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0de4ae99-0130-49c1-a0da-6ffe53670b6a"),
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            CurrentFlightId = new Guid("ca2b41fc-d7d1-4305-9e35-a435204023f0"),
                            Name = "Land port 1"
                        },
                        new
                        {
                            Id = new Guid("7628362e-57a1-43ed-88f8-55d2f81f280c"),
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("fe89c47f-add6-432f-92b2-7d97db0a9baf"),
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("007de4a2-165c-44d4-857a-009918751144"),
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Name = "Drop lugage"
                        },
                        new
                        {
                            Id = new Guid("05451801-c66c-4646-8091-b954e49ed776"),
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Name = "Refuel"
                        },
                        new
                        {
                            Id = new Guid("a128508a-9ef4-4cf4-b4b9-6cfd5c64838d"),
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Name = "Takeoff port 1"
                        },
                        new
                        {
                            Id = new Guid("1241505e-4432-4724-b393-f600d3e3b80b"),
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Name = "Pick lugage"
                        },
                        new
                        {
                            Id = new Guid("bb56545f-0f88-4fc9-97f7-3d639827f280"),
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("beb03d6e-1f9f-46e6-94cc-da6c1e46469e"),
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("7188f8ee-9ee8-4d33-a50e-4fcd097faa4e"),
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61"),
                            CurrentFlightId = new Guid("72749932-2ab1-4f2a-908c-14fc98d52782"),
                            Name = "Takeoff"
                        });
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.HasKey("StationToId", "Direction", "ControlTowerId");

                    b.HasIndex("ControlTowerId");

                    b.HasIndex("StationToId")
                        .IsUnique();

                    b.ToTable("StationControlTowerRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("0de4ae99-0130-49c1-a0da-6ffe53670b6a"),
                            Direction = 0,
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61")
                        },
                        new
                        {
                            StationToId = new Guid("a128508a-9ef4-4cf4-b4b9-6cfd5c64838d"),
                            Direction = 1,
                            ControlTowerId = new Guid("ff65ceb7-3597-4f48-aca1-19a2d2ee8b61")
                        });
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationFromId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.HasKey("StationToId", "StationFromId", "Direction");

                    b.HasIndex("StationFromId");

                    b.ToTable("StationRelations");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("7628362e-57a1-43ed-88f8-55d2f81f280c"),
                            StationFromId = new Guid("0de4ae99-0130-49c1-a0da-6ffe53670b6a"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("fe89c47f-add6-432f-92b2-7d97db0a9baf"),
                            StationFromId = new Guid("0de4ae99-0130-49c1-a0da-6ffe53670b6a"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("007de4a2-165c-44d4-857a-009918751144"),
                            StationFromId = new Guid("7628362e-57a1-43ed-88f8-55d2f81f280c"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("007de4a2-165c-44d4-857a-009918751144"),
                            StationFromId = new Guid("fe89c47f-add6-432f-92b2-7d97db0a9baf"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("05451801-c66c-4646-8091-b954e49ed776"),
                            StationFromId = new Guid("007de4a2-165c-44d4-857a-009918751144"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("1241505e-4432-4724-b393-f600d3e3b80b"),
                            StationFromId = new Guid("05451801-c66c-4646-8091-b954e49ed776"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("05451801-c66c-4646-8091-b954e49ed776"),
                            StationFromId = new Guid("a128508a-9ef4-4cf4-b4b9-6cfd5c64838d"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("bb56545f-0f88-4fc9-97f7-3d639827f280"),
                            StationFromId = new Guid("1241505e-4432-4724-b393-f600d3e3b80b"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("beb03d6e-1f9f-46e6-94cc-da6c1e46469e"),
                            StationFromId = new Guid("1241505e-4432-4724-b393-f600d3e3b80b"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("7188f8ee-9ee8-4d33-a50e-4fcd097faa4e"),
                            StationFromId = new Guid("bb56545f-0f88-4fc9-97f7-3d639827f280"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("7188f8ee-9ee8-4d33-a50e-4fcd097faa4e"),
                            StationFromId = new Guid("beb03d6e-1f9f-46e6-94cc-da6c1e46469e"),
                            Direction = 1
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.HasOne("Common.Models.Airplane", "Airplane")
                        .WithMany("Flights")
                        .HasForeignKey("AirplaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FlightsWaiting")
                        .HasForeignKey("ControlTowerId");

                    b.Navigation("Airplane");

                    b.Navigation("ControlTower");
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.HasOne("Common.Models.Flight", "Flight")
                        .WithMany("History")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithMany("History")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("Stations")
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Flight", "CurrentFlight")
                        .WithOne("Station")
                        .HasForeignKey("Common.Models.Station", "CurrentFlightId");

                    b.Navigation("ControlTower");

                    b.Navigation("CurrentFlight");
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FirstStations")
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithOne("ControlTowerRelation")
                        .HasForeignKey("Common.Models.StationControlTowerRelation", "StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlTower");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.HasOne("Common.Models.Station", "StationFrom")
                        .WithMany("ChildrenStations")
                        .HasForeignKey("StationFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "StationTo")
                        .WithMany("ParentStations")
                        .HasForeignKey("StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StationFrom");

                    b.Navigation("StationTo");
                });

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Navigation("FirstStations");

                    b.Navigation("FlightsWaiting");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Navigation("ChildrenStations");

                    b.Navigation("ControlTowerRelation");

                    b.Navigation("History");

                    b.Navigation("ParentStations");
                });
#pragma warning restore 612, 618
        }
    }
}
