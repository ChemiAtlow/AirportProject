// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    partial class AirportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirLine")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirLine = "El Al"
                        },
                        new
                        {
                            Id = 2,
                            AirLine = "Lufthansa"
                        },
                        new
                        {
                            Id = 3,
                            AirLine = "United"
                        },
                        new
                        {
                            Id = 4,
                            AirLine = "Frontier"
                        },
                        new
                        {
                            Id = 5,
                            AirLine = "Ryan air"
                        },
                        new
                        {
                            Id = 6,
                            AirLine = "Blue air"
                        },
                        new
                        {
                            Id = 7,
                            AirLine = "Air France"
                        },
                        new
                        {
                            Id = 8,
                            AirLine = "SWISS"
                        },
                        new
                        {
                            Id = 9,
                            AirLine = "Turkish Airlines"
                        });
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ControlTowers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e25df7f2-f08c-4b23-b479-4ede7f1d92b4"),
                            Name = "TLV"
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AirplaneId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("From")
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AirplaneId");

                    b.HasIndex("ControlTowerId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7de0043-fbf5-44e3-bcfe-7610d0ad49cc"),
                            AirplaneId = 1,
                            Direction = 0,
                            From = "JFK",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("00ad3e68-9e10-46da-96a8-3f7ac3332483"),
                            AirplaneId = 2,
                            Direction = 0,
                            From = "IST",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("3abf2fd5-c083-42a0-bc3e-f36bf8049271"),
                            AirplaneId = 3,
                            Direction = 0,
                            From = "SAW",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("8fbea07d-77fb-4e51-b83e-a69eda4f5038"),
                            AirplaneId = 4,
                            ControlTowerId = new Guid("e25df7f2-f08c-4b23-b479-4ede7f1d92b4"),
                            Direction = 0,
                            From = "STN",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("7f18e7fc-70cc-4394-b505-f7192710f397"),
                            AirplaneId = 1,
                            Direction = 1,
                            From = "TLV",
                            To = "ATH"
                        },
                        new
                        {
                            Id = new Guid("791b2552-05d9-47a7-95ac-081f8d9a4418"),
                            AirplaneId = 2,
                            Direction = 1,
                            From = "TLV",
                            To = "LTN"
                        });
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EnterStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LeaveStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("StationId");

                    b.ToTable("FlightHistories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44539f4b-3a81-40f7-8243-0546e694707b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 30, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("a7de0043-fbf5-44e3-bcfe-7610d0ad49cc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("6acecce8-1ab7-42e6-8ec0-deb96ad77008")
                        },
                        new
                        {
                            Id = new Guid("9fc78eb4-d6fb-4bb1-b794-751ad6ac1289"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("a7de0043-fbf5-44e3-bcfe-7610d0ad49cc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("20df2404-6a0b-4237-b1a5-228ea7120355")
                        },
                        new
                        {
                            Id = new Guid("7ad1d42e-82b8-439c-bc93-4608c999d1e4"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("a7de0043-fbf5-44e3-bcfe-7610d0ad49cc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("9ba75bc1-7cbc-44c4-ade9-1c8eb7b5ab9d")
                        },
                        new
                        {
                            Id = new Guid("8af01802-88fa-48d1-9728-cd1b41bbd073"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("a7de0043-fbf5-44e3-bcfe-7610d0ad49cc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 27, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("89214a22-3793-4e62-8f43-efa4512e7045")
                        },
                        new
                        {
                            Id = new Guid("4531e577-fe21-4243-987c-be69984adc54"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 48, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("00ad3e68-9e10-46da-96a8-3f7ac3332483"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("6acecce8-1ab7-42e6-8ec0-deb96ad77008")
                        },
                        new
                        {
                            Id = new Guid("2b03cf38-a107-48d8-8d82-b16f013267de"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("00ad3e68-9e10-46da-96a8-3f7ac3332483"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("73c1cdd7-f7d6-411f-a4d8-f42ba4dca73c")
                        },
                        new
                        {
                            Id = new Guid("66c8cdce-0270-4de5-ab60-014acb44df52"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("00ad3e68-9e10-46da-96a8-3f7ac3332483"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("9ba75bc1-7cbc-44c4-ade9-1c8eb7b5ab9d")
                        },
                        new
                        {
                            Id = new Guid("dff6995b-78ba-4e8a-ab33-7f21bfc94f0d"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("00ad3e68-9e10-46da-96a8-3f7ac3332483"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 38, 10, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("89214a22-3793-4e62-8f43-efa4512e7045")
                        },
                        new
                        {
                            Id = new Guid("03c3721a-85b1-4058-9006-fff0c1f59845"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("3abf2fd5-c083-42a0-bc3e-f36bf8049271"),
                            StationId = new Guid("6acecce8-1ab7-42e6-8ec0-deb96ad77008")
                        },
                        new
                        {
                            Id = new Guid("90406242-f971-4b74-be0d-6e4e800098ec"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 46, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("7f18e7fc-70cc-4394-b505-f7192710f397"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("83aa9985-4090-44f1-957e-5d306ecc86d5")
                        },
                        new
                        {
                            Id = new Guid("433b4b8e-aecd-4336-a6c4-d50037404c3c"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("7f18e7fc-70cc-4394-b505-f7192710f397"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("89214a22-3793-4e62-8f43-efa4512e7045")
                        },
                        new
                        {
                            Id = new Guid("539183d5-e906-4083-909d-56a8f1d6a6c3"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("7f18e7fc-70cc-4394-b505-f7192710f397"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("7eb43542-a744-4399-a5d2-c0fe2832bee6")
                        },
                        new
                        {
                            Id = new Guid("1ac2b483-c1be-4122-9e30-4958936b6235"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("7f18e7fc-70cc-4394-b505-f7192710f397"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("55b905c0-aa79-430a-9c72-300c0356b302")
                        },
                        new
                        {
                            Id = new Guid("89baf05e-2014-4273-b25a-a9539984e584"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("7f18e7fc-70cc-4394-b505-f7192710f397"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 29, 3, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("c24a35ac-84f2-4aa2-9fc5-d9581c83c598")
                        },
                        new
                        {
                            Id = new Guid("0c6ad9b4-081c-4cbe-b9c7-3fb24967cb17"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 38, 16, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("791b2552-05d9-47a7-95ac-081f8d9a4418"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("83aa9985-4090-44f1-957e-5d306ecc86d5")
                        },
                        new
                        {
                            Id = new Guid("ea80c4fb-1b3b-4563-b597-f44dbe644b35"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("791b2552-05d9-47a7-95ac-081f8d9a4418"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("89214a22-3793-4e62-8f43-efa4512e7045")
                        },
                        new
                        {
                            Id = new Guid("7a983e9d-92b5-454b-937c-aca653b22bcf"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("791b2552-05d9-47a7-95ac-081f8d9a4418"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("7eb43542-a744-4399-a5d2-c0fe2832bee6")
                        },
                        new
                        {
                            Id = new Guid("206e0220-4cc4-41a2-b61f-ed53df704b2e"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("791b2552-05d9-47a7-95ac-081f8d9a4418"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("a727aa36-b382-4ce1-ab7a-c6eb064c5b69")
                        },
                        new
                        {
                            Id = new Guid("4b886d17-b357-40c6-b7d3-fe23d489684c"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("791b2552-05d9-47a7-95ac-081f8d9a4418"),
                            StationId = new Guid("c24a35ac-84f2-4aa2-9fc5-d9581c83c598")
                        });
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CurrentFlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrentFlightId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6acecce8-1ab7-42e6-8ec0-deb96ad77008"),
                            CurrentFlightId = new Guid("3abf2fd5-c083-42a0-bc3e-f36bf8049271"),
                            Name = "Land port 1"
                        },
                        new
                        {
                            Id = new Guid("73c1cdd7-f7d6-411f-a4d8-f42ba4dca73c"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("20df2404-6a0b-4237-b1a5-228ea7120355"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("9ba75bc1-7cbc-44c4-ade9-1c8eb7b5ab9d"),
                            Name = "Drop lugage"
                        },
                        new
                        {
                            Id = new Guid("89214a22-3793-4e62-8f43-efa4512e7045"),
                            Name = "Refuel"
                        },
                        new
                        {
                            Id = new Guid("83aa9985-4090-44f1-957e-5d306ecc86d5"),
                            Name = "Takeoff port 1"
                        },
                        new
                        {
                            Id = new Guid("7eb43542-a744-4399-a5d2-c0fe2832bee6"),
                            Name = "Pick lugage"
                        },
                        new
                        {
                            Id = new Guid("55b905c0-aa79-430a-9c72-300c0356b302"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("a727aa36-b382-4ce1-ab7a-c6eb064c5b69"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("c24a35ac-84f2-4aa2-9fc5-d9581c83c598"),
                            CurrentFlightId = new Guid("791b2552-05d9-47a7-95ac-081f8d9a4418"),
                            Name = "Takeoff"
                        });
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.Property<Guid>("StationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.HasKey("StationId", "Direction", "ControlTowerId");

                    b.HasIndex("ControlTowerId");

                    b.HasIndex("StationId")
                        .IsUnique();

                    b.ToTable("StationControlTowerRelation");

                    b.HasData(
                        new
                        {
                            StationId = new Guid("6acecce8-1ab7-42e6-8ec0-deb96ad77008"),
                            Direction = 0,
                            ControlTowerId = new Guid("e25df7f2-f08c-4b23-b479-4ede7f1d92b4")
                        },
                        new
                        {
                            StationId = new Guid("83aa9985-4090-44f1-957e-5d306ecc86d5"),
                            Direction = 1,
                            ControlTowerId = new Guid("e25df7f2-f08c-4b23-b479-4ede7f1d92b4")
                        });
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationFromId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.HasKey("StationToId", "StationFromId", "Direction");

                    b.HasIndex("StationFromId");

                    b.ToTable("StationRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("73c1cdd7-f7d6-411f-a4d8-f42ba4dca73c"),
                            StationFromId = new Guid("6acecce8-1ab7-42e6-8ec0-deb96ad77008"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("20df2404-6a0b-4237-b1a5-228ea7120355"),
                            StationFromId = new Guid("6acecce8-1ab7-42e6-8ec0-deb96ad77008"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("9ba75bc1-7cbc-44c4-ade9-1c8eb7b5ab9d"),
                            StationFromId = new Guid("73c1cdd7-f7d6-411f-a4d8-f42ba4dca73c"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("9ba75bc1-7cbc-44c4-ade9-1c8eb7b5ab9d"),
                            StationFromId = new Guid("20df2404-6a0b-4237-b1a5-228ea7120355"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("89214a22-3793-4e62-8f43-efa4512e7045"),
                            StationFromId = new Guid("9ba75bc1-7cbc-44c4-ade9-1c8eb7b5ab9d"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("7eb43542-a744-4399-a5d2-c0fe2832bee6"),
                            StationFromId = new Guid("89214a22-3793-4e62-8f43-efa4512e7045"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("89214a22-3793-4e62-8f43-efa4512e7045"),
                            StationFromId = new Guid("83aa9985-4090-44f1-957e-5d306ecc86d5"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("55b905c0-aa79-430a-9c72-300c0356b302"),
                            StationFromId = new Guid("7eb43542-a744-4399-a5d2-c0fe2832bee6"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("a727aa36-b382-4ce1-ab7a-c6eb064c5b69"),
                            StationFromId = new Guid("7eb43542-a744-4399-a5d2-c0fe2832bee6"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("c24a35ac-84f2-4aa2-9fc5-d9581c83c598"),
                            StationFromId = new Guid("55b905c0-aa79-430a-9c72-300c0356b302"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("c24a35ac-84f2-4aa2-9fc5-d9581c83c598"),
                            StationFromId = new Guid("a727aa36-b382-4ce1-ab7a-c6eb064c5b69"),
                            Direction = 1
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.HasOne("Common.Models.Airplane", "Airplane")
                        .WithMany("Flights")
                        .HasForeignKey("AirplaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FlightsWaiting")
                        .HasForeignKey("ControlTowerId");

                    b.Navigation("Airplane");

                    b.Navigation("ControlTower");
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.HasOne("Common.Models.Flight", "Flight")
                        .WithMany("History")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithMany("History")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.HasOne("Common.Models.Flight", "CurrentFlight")
                        .WithMany()
                        .HasForeignKey("CurrentFlightId");

                    b.Navigation("CurrentFlight");
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FirstStations")
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithOne("ControlTowerRelation")
                        .HasForeignKey("Common.Models.StationControlTowerRelation", "StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlTower");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.HasOne("Common.Models.Station", "StationFrom")
                        .WithMany("ParentStations")
                        .HasForeignKey("StationFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "StationTo")
                        .WithMany("ChildrenStations")
                        .HasForeignKey("StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StationFrom");

                    b.Navigation("StationTo");
                });

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Navigation("FirstStations");

                    b.Navigation("FlightsWaiting");
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Navigation("ChildrenStations");

                    b.Navigation("ControlTowerRelation");

                    b.Navigation("History");

                    b.Navigation("ParentStations");
                });
#pragma warning restore 612, 618
        }
    }
}
