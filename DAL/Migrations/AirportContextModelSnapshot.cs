// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    partial class AirportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirLine")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirLine = "El Al"
                        },
                        new
                        {
                            Id = 2,
                            AirLine = "Lufthansa"
                        },
                        new
                        {
                            Id = 3,
                            AirLine = "United"
                        },
                        new
                        {
                            Id = 4,
                            AirLine = "Frontier"
                        },
                        new
                        {
                            Id = 5,
                            AirLine = "Ryan air"
                        },
                        new
                        {
                            Id = 6,
                            AirLine = "Blue air"
                        },
                        new
                        {
                            Id = 7,
                            AirLine = "Air France"
                        },
                        new
                        {
                            Id = 8,
                            AirLine = "SWISS"
                        },
                        new
                        {
                            Id = 9,
                            AirLine = "Turkish Airlines"
                        });
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ControlTowers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5921217-a88c-4759-b234-58d6cebc72f2"),
                            Name = "TLV"
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AirplaneId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("From")
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AirplaneId");

                    b.HasIndex("ControlTowerId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eee47d19-49a5-4814-b9b3-2c5e298da0d4"),
                            AirplaneId = 1,
                            Direction = 0,
                            From = "JFK",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("e55ca328-32a6-4089-a416-05777d8f4a4f"),
                            AirplaneId = 2,
                            Direction = 0,
                            From = "IST",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("fbd7f136-9886-45a5-9831-6209501a8b30"),
                            AirplaneId = 3,
                            Direction = 0,
                            From = "SAW",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("0dc1fccc-0ad6-4699-b691-f37fa1f54519"),
                            AirplaneId = 4,
                            ControlTowerId = new Guid("e5921217-a88c-4759-b234-58d6cebc72f2"),
                            Direction = 0,
                            From = "STN",
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("5022823a-01d8-4114-a9c6-461ed724555a"),
                            AirplaneId = 1,
                            Direction = 1,
                            From = "TLV",
                            To = "ATH"
                        },
                        new
                        {
                            Id = new Guid("d3560b46-9a68-40cc-a391-bb4d52b2af77"),
                            AirplaneId = 2,
                            Direction = 1,
                            From = "TLV",
                            To = "LTN"
                        });
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EnterStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LeaveStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("StationId");

                    b.ToTable("FlightHistories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5b0f00e-70ba-4efb-996f-2d33f2cf113d"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 30, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("eee47d19-49a5-4814-b9b3-2c5e298da0d4"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("da5a2f75-3d15-4b83-b142-9503bdf46d95")
                        },
                        new
                        {
                            Id = new Guid("7c8ab075-85be-4a64-beee-a20f45a8d3cb"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("eee47d19-49a5-4814-b9b3-2c5e298da0d4"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0f0dd355-c0f3-4c85-bfac-f9745d3c6878")
                        },
                        new
                        {
                            Id = new Guid("c8446a00-3fb7-4f58-bb55-51c8982a850f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("eee47d19-49a5-4814-b9b3-2c5e298da0d4"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0fe34372-728f-4298-819d-6fff6b4d23c4")
                        },
                        new
                        {
                            Id = new Guid("19122089-389f-459a-9c16-eb27ed2fadf2"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("eee47d19-49a5-4814-b9b3-2c5e298da0d4"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 27, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("b21898d6-8326-4b91-b23c-09d39d96b2b1")
                        },
                        new
                        {
                            Id = new Guid("c2b22daa-0d79-4d9d-b843-9dc66f813e89"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 48, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("e55ca328-32a6-4089-a416-05777d8f4a4f"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("da5a2f75-3d15-4b83-b142-9503bdf46d95")
                        },
                        new
                        {
                            Id = new Guid("c475baf8-70a4-4b21-a598-e52e9ba3a794"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("e55ca328-32a6-4089-a416-05777d8f4a4f"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("aacc488b-32f6-40de-b3a2-5747a77611e5")
                        },
                        new
                        {
                            Id = new Guid("16bf8a13-73b9-4ada-8d98-a367d8fc7e69"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("e55ca328-32a6-4089-a416-05777d8f4a4f"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("0fe34372-728f-4298-819d-6fff6b4d23c4")
                        },
                        new
                        {
                            Id = new Guid("46816ec4-0934-400e-97e7-c5861099e759"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("e55ca328-32a6-4089-a416-05777d8f4a4f"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 38, 10, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("b21898d6-8326-4b91-b23c-09d39d96b2b1")
                        },
                        new
                        {
                            Id = new Guid("a0efd653-298c-44f4-85b8-4b17e94518e7"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("fbd7f136-9886-45a5-9831-6209501a8b30"),
                            StationId = new Guid("da5a2f75-3d15-4b83-b142-9503bdf46d95")
                        },
                        new
                        {
                            Id = new Guid("56c91f3d-ad8d-43e3-98d7-ae4706f7be93"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 46, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("5022823a-01d8-4114-a9c6-461ed724555a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("1407da1f-f2d6-4b98-907f-ea96dc5c6bae")
                        },
                        new
                        {
                            Id = new Guid("e35cc34a-85f9-46f1-a79a-37943ea1db5b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("5022823a-01d8-4114-a9c6-461ed724555a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("b21898d6-8326-4b91-b23c-09d39d96b2b1")
                        },
                        new
                        {
                            Id = new Guid("610ff5e1-a77a-4fe3-af87-aee2b9b531bd"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("5022823a-01d8-4114-a9c6-461ed724555a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("d0579b43-6d7a-49b5-83ba-ac7c66f3992f")
                        },
                        new
                        {
                            Id = new Guid("61cccbae-419d-4c4b-a047-6d47ccc23173"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("5022823a-01d8-4114-a9c6-461ed724555a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("243cfade-99bc-4a9a-8ed5-af1dc59b6ef5")
                        },
                        new
                        {
                            Id = new Guid("3e76f017-d450-4428-aefc-3ba59665b7f4"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("5022823a-01d8-4114-a9c6-461ed724555a"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 29, 3, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("8857623a-7ede-4cb7-ac2e-81cd62504661")
                        },
                        new
                        {
                            Id = new Guid("65d38bfc-736a-4077-a111-444fed99752c"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 38, 16, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("d3560b46-9a68-40cc-a391-bb4d52b2af77"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("1407da1f-f2d6-4b98-907f-ea96dc5c6bae")
                        },
                        new
                        {
                            Id = new Guid("1ee839e4-142d-4547-8f6d-3df62e30b2a7"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("d3560b46-9a68-40cc-a391-bb4d52b2af77"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("b21898d6-8326-4b91-b23c-09d39d96b2b1")
                        },
                        new
                        {
                            Id = new Guid("99b9bd05-274e-4f40-8728-ec1397c30e96"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("d3560b46-9a68-40cc-a391-bb4d52b2af77"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("d0579b43-6d7a-49b5-83ba-ac7c66f3992f")
                        },
                        new
                        {
                            Id = new Guid("f5a51fa6-d829-432e-ba26-4da4f85fac6e"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("d3560b46-9a68-40cc-a391-bb4d52b2af77"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("726022fb-f31e-401b-96f4-fab4b4d31590")
                        },
                        new
                        {
                            Id = new Guid("9f4ff1df-447d-456d-a958-6593518c9122"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("d3560b46-9a68-40cc-a391-bb4d52b2af77"),
                            StationId = new Guid("8857623a-7ede-4cb7-ac2e-81cd62504661")
                        });
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CurrentFlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrentFlightId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("da5a2f75-3d15-4b83-b142-9503bdf46d95"),
                            CurrentFlightId = new Guid("fbd7f136-9886-45a5-9831-6209501a8b30"),
                            Name = "Land port 1"
                        },
                        new
                        {
                            Id = new Guid("aacc488b-32f6-40de-b3a2-5747a77611e5"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("0f0dd355-c0f3-4c85-bfac-f9745d3c6878"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("0fe34372-728f-4298-819d-6fff6b4d23c4"),
                            Name = "Drop lugage"
                        },
                        new
                        {
                            Id = new Guid("b21898d6-8326-4b91-b23c-09d39d96b2b1"),
                            Name = "Refuel"
                        },
                        new
                        {
                            Id = new Guid("1407da1f-f2d6-4b98-907f-ea96dc5c6bae"),
                            Name = "Takeoff port 1"
                        },
                        new
                        {
                            Id = new Guid("d0579b43-6d7a-49b5-83ba-ac7c66f3992f"),
                            Name = "Pick lugage"
                        },
                        new
                        {
                            Id = new Guid("243cfade-99bc-4a9a-8ed5-af1dc59b6ef5"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("726022fb-f31e-401b-96f4-fab4b4d31590"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("8857623a-7ede-4cb7-ac2e-81cd62504661"),
                            CurrentFlightId = new Guid("d3560b46-9a68-40cc-a391-bb4d52b2af77"),
                            Name = "Takeoff"
                        });
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.Property<Guid>("StationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.HasKey("StationId", "Direction", "ControlTowerId");

                    b.HasIndex("ControlTowerId");

                    b.HasIndex("StationId")
                        .IsUnique();

                    b.ToTable("StationControlTowerRelation");

                    b.HasData(
                        new
                        {
                            StationId = new Guid("da5a2f75-3d15-4b83-b142-9503bdf46d95"),
                            Direction = 0,
                            ControlTowerId = new Guid("e5921217-a88c-4759-b234-58d6cebc72f2")
                        },
                        new
                        {
                            StationId = new Guid("1407da1f-f2d6-4b98-907f-ea96dc5c6bae"),
                            Direction = 1,
                            ControlTowerId = new Guid("e5921217-a88c-4759-b234-58d6cebc72f2")
                        });
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationFromId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.HasKey("StationToId", "StationFromId", "Direction");

                    b.HasIndex("StationFromId");

                    b.ToTable("StationRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("aacc488b-32f6-40de-b3a2-5747a77611e5"),
                            StationFromId = new Guid("da5a2f75-3d15-4b83-b142-9503bdf46d95"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("0f0dd355-c0f3-4c85-bfac-f9745d3c6878"),
                            StationFromId = new Guid("da5a2f75-3d15-4b83-b142-9503bdf46d95"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("0fe34372-728f-4298-819d-6fff6b4d23c4"),
                            StationFromId = new Guid("aacc488b-32f6-40de-b3a2-5747a77611e5"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("0fe34372-728f-4298-819d-6fff6b4d23c4"),
                            StationFromId = new Guid("0f0dd355-c0f3-4c85-bfac-f9745d3c6878"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("b21898d6-8326-4b91-b23c-09d39d96b2b1"),
                            StationFromId = new Guid("0fe34372-728f-4298-819d-6fff6b4d23c4"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("d0579b43-6d7a-49b5-83ba-ac7c66f3992f"),
                            StationFromId = new Guid("b21898d6-8326-4b91-b23c-09d39d96b2b1"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("b21898d6-8326-4b91-b23c-09d39d96b2b1"),
                            StationFromId = new Guid("1407da1f-f2d6-4b98-907f-ea96dc5c6bae"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("243cfade-99bc-4a9a-8ed5-af1dc59b6ef5"),
                            StationFromId = new Guid("d0579b43-6d7a-49b5-83ba-ac7c66f3992f"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("726022fb-f31e-401b-96f4-fab4b4d31590"),
                            StationFromId = new Guid("d0579b43-6d7a-49b5-83ba-ac7c66f3992f"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("8857623a-7ede-4cb7-ac2e-81cd62504661"),
                            StationFromId = new Guid("243cfade-99bc-4a9a-8ed5-af1dc59b6ef5"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("8857623a-7ede-4cb7-ac2e-81cd62504661"),
                            StationFromId = new Guid("726022fb-f31e-401b-96f4-fab4b4d31590"),
                            Direction = 1
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.HasOne("Common.Models.Airplane", "Airplane")
                        .WithMany("Flights")
                        .HasForeignKey("AirplaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FlightsWaiting")
                        .HasForeignKey("ControlTowerId");

                    b.Navigation("Airplane");

                    b.Navigation("ControlTower");
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.HasOne("Common.Models.Flight", "Flight")
                        .WithMany("History")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithMany("History")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.HasOne("Common.Models.Flight", "CurrentFlight")
                        .WithMany()
                        .HasForeignKey("CurrentFlightId");

                    b.Navigation("CurrentFlight");
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FirstStations")
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithOne("ControlTowerRelation")
                        .HasForeignKey("Common.Models.StationControlTowerRelation", "StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlTower");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.HasOne("Common.Models.Station", "StationFrom")
                        .WithMany("ParentStations")
                        .HasForeignKey("StationFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "StationTo")
                        .WithMany("ChildrenStations")
                        .HasForeignKey("StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StationFrom");

                    b.Navigation("StationTo");
                });

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Navigation("FirstStations");

                    b.Navigation("FlightsWaiting");
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Navigation("ChildrenStations");

                    b.Navigation("ControlTowerRelation");

                    b.Navigation("History");

                    b.Navigation("ParentStations");
                });
#pragma warning restore 612, 618
        }
    }
}
