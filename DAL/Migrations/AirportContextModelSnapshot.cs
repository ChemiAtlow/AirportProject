// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    partial class AirportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirLine")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirLine = "El Al"
                        },
                        new
                        {
                            Id = 2,
                            AirLine = "Lufthansa"
                        },
                        new
                        {
                            Id = 3,
                            AirLine = "United"
                        },
                        new
                        {
                            Id = 4,
                            AirLine = "Frontier"
                        },
                        new
                        {
                            Id = 5,
                            AirLine = "Ryan air"
                        },
                        new
                        {
                            Id = 6,
                            AirLine = "Blue air"
                        },
                        new
                        {
                            Id = 7,
                            AirLine = "Air France"
                        },
                        new
                        {
                            Id = 8,
                            AirLine = "SWISS"
                        },
                        new
                        {
                            Id = 9,
                            AirLine = "Turkish Airlines"
                        });
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ControlTowers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Name = "TLV"
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AirplaneId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("From")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlannedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("StationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AirplaneId");

                    b.HasIndex("ControlTowerId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52160cb7-23f1-4b49-9173-44ff0d50e0cc"),
                            AirplaneId = 1,
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Direction = 0,
                            From = "JFK",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 18, 0, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("df8444a6-03e2-4f40-a7cb-c3543eba3ca3"),
                            AirplaneId = 2,
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Direction = 0,
                            From = "IST",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 24, 57, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("727c9721-ed85-403e-995a-93c38ef1cf92"),
                            AirplaneId = 3,
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Direction = 0,
                            From = "SAW",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 26, 18, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("6fe84c76-62da-4d64-a20f-f14acd3e3a0a"),
                            AirplaneId = 4,
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Direction = 0,
                            From = "STN",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 31, 6, 0, DateTimeKind.Unspecified),
                            To = "TLV"
                        },
                        new
                        {
                            Id = new Guid("82a910bc-a761-40b4-b76d-a86962b95f76"),
                            AirplaneId = 1,
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Direction = 1,
                            From = "TLV",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 17, 34, 0, DateTimeKind.Unspecified),
                            To = "ATH"
                        },
                        new
                        {
                            Id = new Guid("49908bd7-a72a-4aff-a1f7-0b889f747a04"),
                            AirplaneId = 2,
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Direction = 1,
                            From = "TLV",
                            PlannedTime = new DateTime(2020, 11, 15, 4, 36, 29, 0, DateTimeKind.Unspecified),
                            To = "LTN"
                        });
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EnterStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LeaveStationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("StationId");

                    b.ToTable("FlightHistories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71b81dd2-761f-49df-bc60-7988cea045f1"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 30, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("52160cb7-23f1-4b49-9173-44ff0d50e0cc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("806e0e23-ae31-4aa1-9736-1a0c279fe84d")
                        },
                        new
                        {
                            Id = new Guid("014c7088-e2b1-4130-97cc-6575cf1db7da"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 22, 14, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("52160cb7-23f1-4b49-9173-44ff0d50e0cc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("4c37c5ea-ef60-48f7-8aa4-f257e044bfe4")
                        },
                        new
                        {
                            Id = new Guid("6f9914bf-6290-4874-9566-d8ad4437c0f0"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 7, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("52160cb7-23f1-4b49-9173-44ff0d50e0cc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("3289ed56-24e7-4468-b073-a55ac47a838a")
                        },
                        new
                        {
                            Id = new Guid("d11c72bd-361f-4896-9ee7-46a1a83f6c48"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("52160cb7-23f1-4b49-9173-44ff0d50e0cc"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 27, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("68c84573-0f39-499e-9f79-5b5acff30619")
                        },
                        new
                        {
                            Id = new Guid("d87e1236-f062-4d0f-968a-bbde7e501921"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 48, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("df8444a6-03e2-4f40-a7cb-c3543eba3ca3"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("806e0e23-ae31-4aa1-9736-1a0c279fe84d")
                        },
                        new
                        {
                            Id = new Guid("c1980f62-7072-4607-b0e6-08cb3f356b87"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 25, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("df8444a6-03e2-4f40-a7cb-c3543eba3ca3"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("1ab04ed3-9217-4580-bb79-88e88219f3ef")
                        },
                        new
                        {
                            Id = new Guid("0391d79f-e050-41a8-b3f8-7093369ed29b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 30, 1, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("df8444a6-03e2-4f40-a7cb-c3543eba3ca3"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("3289ed56-24e7-4468-b073-a55ac47a838a")
                        },
                        new
                        {
                            Id = new Guid("670aa5de-114b-40fc-9a80-86998704999b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 34, 12, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("df8444a6-03e2-4f40-a7cb-c3543eba3ca3"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 38, 10, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("68c84573-0f39-499e-9f79-5b5acff30619")
                        },
                        new
                        {
                            Id = new Guid("7623e60a-7bc6-41a1-b142-576eba871d8b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 26, 38, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("727c9721-ed85-403e-995a-93c38ef1cf92"),
                            StationId = new Guid("806e0e23-ae31-4aa1-9736-1a0c279fe84d")
                        },
                        new
                        {
                            Id = new Guid("3ccf15e9-6531-4066-b26a-7646c1da89d8"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 18, 46, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("82a910bc-a761-40b4-b76d-a86962b95f76"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("610d10c9-1075-4ed8-9343-8be8905506bf")
                        },
                        new
                        {
                            Id = new Guid("d3927a67-af8c-46fc-965d-902cfe3cae44"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 20, 20, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("82a910bc-a761-40b4-b76d-a86962b95f76"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("68c84573-0f39-499e-9f79-5b5acff30619")
                        },
                        new
                        {
                            Id = new Guid("27992b63-3741-4760-95b6-73f15fc62f88"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 23, 21, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("82a910bc-a761-40b4-b76d-a86962b95f76"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("e855dd46-109e-4fc2-afbc-d25092bf7b73")
                        },
                        new
                        {
                            Id = new Guid("387c72bc-08f8-41fb-a3fc-9d0b9a1387d2"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 24, 19, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("82a910bc-a761-40b4-b76d-a86962b95f76"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("9d1f0ed8-9c4c-43c5-9975-ae5af2a989e0")
                        },
                        new
                        {
                            Id = new Guid("991336f4-5125-4b63-9ec3-3a28ebcf0433"),
                            EnterStationTime = new DateTime(2020, 11, 15, 4, 28, 39, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("82a910bc-a761-40b4-b76d-a86962b95f76"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 4, 29, 3, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("3eebbec4-88eb-46b2-bb43-9234af22adec")
                        },
                        new
                        {
                            Id = new Guid("1d3974fd-9583-4333-a49c-9b0602257db1"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 38, 16, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("49908bd7-a72a-4aff-a1f7-0b889f747a04"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("610d10c9-1075-4ed8-9343-8be8905506bf")
                        },
                        new
                        {
                            Id = new Guid("1dc67b96-6faa-41d4-ba88-1f1918d5c9ab"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 40, 9, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("49908bd7-a72a-4aff-a1f7-0b889f747a04"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("68c84573-0f39-499e-9f79-5b5acff30619")
                        },
                        new
                        {
                            Id = new Guid("4ddce015-cd1a-4a55-a614-18672dfbd25f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 42, 47, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("49908bd7-a72a-4aff-a1f7-0b889f747a04"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("e855dd46-109e-4fc2-afbc-d25092bf7b73")
                        },
                        new
                        {
                            Id = new Guid("25df3a17-cdc8-4538-8c11-7b73eba2702b"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 44, 31, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("49908bd7-a72a-4aff-a1f7-0b889f747a04"),
                            LeaveStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            StationId = new Guid("f21a6c05-2714-4f14-a464-35250d85ee06")
                        },
                        new
                        {
                            Id = new Guid("d90921bc-86b0-4d77-9d6a-e74c779b4d4f"),
                            EnterStationTime = new DateTime(2020, 11, 15, 5, 48, 57, 0, DateTimeKind.Unspecified),
                            FlightId = new Guid("49908bd7-a72a-4aff-a1f7-0b889f747a04"),
                            StationId = new Guid("3eebbec4-88eb-46b2-bb43-9234af22adec")
                        });
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CurrentFlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ControlTowerId");

                    b.HasIndex("CurrentFlightId")
                        .IsUnique();

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("806e0e23-ae31-4aa1-9736-1a0c279fe84d"),
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            CurrentFlightId = new Guid("727c9721-ed85-403e-995a-93c38ef1cf92"),
                            Name = "Land port 1"
                        },
                        new
                        {
                            Id = new Guid("1ab04ed3-9217-4580-bb79-88e88219f3ef"),
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("4c37c5ea-ef60-48f7-8aa4-f257e044bfe4"),
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Name = "Drop passengers"
                        },
                        new
                        {
                            Id = new Guid("3289ed56-24e7-4468-b073-a55ac47a838a"),
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Name = "Drop lugage"
                        },
                        new
                        {
                            Id = new Guid("68c84573-0f39-499e-9f79-5b5acff30619"),
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Name = "Refuel"
                        },
                        new
                        {
                            Id = new Guid("610d10c9-1075-4ed8-9343-8be8905506bf"),
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Name = "Takeoff port 1"
                        },
                        new
                        {
                            Id = new Guid("e855dd46-109e-4fc2-afbc-d25092bf7b73"),
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Name = "Pick lugage"
                        },
                        new
                        {
                            Id = new Guid("9d1f0ed8-9c4c-43c5-9975-ae5af2a989e0"),
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("f21a6c05-2714-4f14-a464-35250d85ee06"),
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            Name = "Pick passengers"
                        },
                        new
                        {
                            Id = new Guid("3eebbec4-88eb-46b2-bb43-9234af22adec"),
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334"),
                            CurrentFlightId = new Guid("49908bd7-a72a-4aff-a1f7-0b889f747a04"),
                            Name = "Takeoff"
                        });
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ControlTowerId")
                        .HasColumnType("TEXT");

                    b.HasKey("StationToId", "Direction", "ControlTowerId");

                    b.HasIndex("ControlTowerId");

                    b.HasIndex("StationToId")
                        .IsUnique();

                    b.ToTable("StationControlTowerRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("806e0e23-ae31-4aa1-9736-1a0c279fe84d"),
                            Direction = 0,
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334")
                        },
                        new
                        {
                            StationToId = new Guid("610d10c9-1075-4ed8-9343-8be8905506bf"),
                            Direction = 1,
                            ControlTowerId = new Guid("0b213d74-6872-4f5b-9e9e-82832cb77334")
                        });
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.Property<Guid>("StationToId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StationFromId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.HasKey("StationToId", "StationFromId", "Direction");

                    b.HasIndex("StationFromId");

                    b.ToTable("StationRelation");

                    b.HasData(
                        new
                        {
                            StationToId = new Guid("1ab04ed3-9217-4580-bb79-88e88219f3ef"),
                            StationFromId = new Guid("806e0e23-ae31-4aa1-9736-1a0c279fe84d"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("4c37c5ea-ef60-48f7-8aa4-f257e044bfe4"),
                            StationFromId = new Guid("806e0e23-ae31-4aa1-9736-1a0c279fe84d"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("3289ed56-24e7-4468-b073-a55ac47a838a"),
                            StationFromId = new Guid("1ab04ed3-9217-4580-bb79-88e88219f3ef"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("3289ed56-24e7-4468-b073-a55ac47a838a"),
                            StationFromId = new Guid("4c37c5ea-ef60-48f7-8aa4-f257e044bfe4"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("68c84573-0f39-499e-9f79-5b5acff30619"),
                            StationFromId = new Guid("3289ed56-24e7-4468-b073-a55ac47a838a"),
                            Direction = 0
                        },
                        new
                        {
                            StationToId = new Guid("e855dd46-109e-4fc2-afbc-d25092bf7b73"),
                            StationFromId = new Guid("68c84573-0f39-499e-9f79-5b5acff30619"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("68c84573-0f39-499e-9f79-5b5acff30619"),
                            StationFromId = new Guid("610d10c9-1075-4ed8-9343-8be8905506bf"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("9d1f0ed8-9c4c-43c5-9975-ae5af2a989e0"),
                            StationFromId = new Guid("e855dd46-109e-4fc2-afbc-d25092bf7b73"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("f21a6c05-2714-4f14-a464-35250d85ee06"),
                            StationFromId = new Guid("e855dd46-109e-4fc2-afbc-d25092bf7b73"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("3eebbec4-88eb-46b2-bb43-9234af22adec"),
                            StationFromId = new Guid("9d1f0ed8-9c4c-43c5-9975-ae5af2a989e0"),
                            Direction = 1
                        },
                        new
                        {
                            StationToId = new Guid("3eebbec4-88eb-46b2-bb43-9234af22adec"),
                            StationFromId = new Guid("f21a6c05-2714-4f14-a464-35250d85ee06"),
                            Direction = 1
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.HasOne("Common.Models.Airplane", "Airplane")
                        .WithMany("Flights")
                        .HasForeignKey("AirplaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FlightsWaiting")
                        .HasForeignKey("ControlTowerId");

                    b.Navigation("Airplane");

                    b.Navigation("ControlTower");
                });

            modelBuilder.Entity("Common.Models.FlightHistory", b =>
                {
                    b.HasOne("Common.Models.Flight", "Flight")
                        .WithMany("History")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithMany("History")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("Stations")
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Flight", "CurrentFlight")
                        .WithOne("Station")
                        .HasForeignKey("Common.Models.Station", "CurrentFlightId");

                    b.Navigation("ControlTower");

                    b.Navigation("CurrentFlight");
                });

            modelBuilder.Entity("Common.Models.StationControlTowerRelation", b =>
                {
                    b.HasOne("Common.Models.ControlTower", "ControlTower")
                        .WithMany("FirstStations")
                        .HasForeignKey("ControlTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "Station")
                        .WithOne("ControlTowerRelation")
                        .HasForeignKey("Common.Models.StationControlTowerRelation", "StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlTower");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.StationRelation", b =>
                {
                    b.HasOne("Common.Models.Station", "StationFrom")
                        .WithMany("ChildrenStations")
                        .HasForeignKey("StationFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Models.Station", "StationTo")
                        .WithMany("ParentStations")
                        .HasForeignKey("StationToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StationFrom");

                    b.Navigation("StationTo");
                });

            modelBuilder.Entity("Common.Models.Airplane", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Common.Models.ControlTower", b =>
                {
                    b.Navigation("FirstStations");

                    b.Navigation("FlightsWaiting");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Common.Models.Station", b =>
                {
                    b.Navigation("ChildrenStations");

                    b.Navigation("ControlTowerRelation");

                    b.Navigation("History");

                    b.Navigation("ParentStations");
                });
#pragma warning restore 612, 618
        }
    }
}
